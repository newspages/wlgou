<!DOCTYPE html>
<html class="   "><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>nicolasff/phpredis Â· GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="https://github.com/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="https://github.com/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://github.com/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://github.com/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://github.com/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site"><meta content="summary" name="twitter:card"><meta content="nicolasff/phpredis" name="twitter:title"><meta content="phpredis - A PHP extension for Redis" name="twitter:description"><meta content="https://avatars2.githubusercontent.com/u/7276?s=400" name="twitter:image:src">
<meta content="GitHub" property="og:site_name"><meta content="object" property="og:type"><meta content="https://avatars2.githubusercontent.com/u/7276?s=400" property="og:image"><meta content="nicolasff/phpredis" property="og:title"><meta content="https://github.com/nicolasff/phpredis" property="og:url"><meta content="phpredis - A PHP extension for Redis" property="og:description">

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient="">
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host"><meta content="collector-cdn.github.com" name="octolytics-script-host"><meta content="github" name="octolytics-app-id"><meta content="B73F540A:6288:B3E4F2C:53A19A61" name="octolytics-dimension-request_id">
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param">
<meta content="Xo6aCJPu2gh6yBbmbf0pFLGmLX3JiC3k69G+Iev+8dIsugR+umJ68b2BOeobKtjX3wc1RikkqfWD54X+0VrU6w==" name="csrf-token">

    <link href="phpredis-function_files/github-8850878a3b8c9016a33ac13293f916b8fb6abbc4.css" media="all" rel="stylesheet" type="text/css">
    <link href="phpredis-function_files/github2-9d94ee17224a87fa0a394ef4004dd54f9ef87410.css" media="all" rel="stylesheet" type="text/css">
    


    <meta http-equiv="x-pjax-version" content="7ac6f5993527f3138955ac1ec0f36b99">

      
  <meta name="description" content="phpredis - A PHP extension for Redis">

  <meta content="7276" name="octolytics-dimension-user_id"><meta content="nicolasff" name="octolytics-dimension-user_login"><meta content="1482997" name="octolytics-dimension-repository_id"><meta content="nicolasff/phpredis" name="octolytics-dimension-repository_nwo"><meta content="true" name="octolytics-dimension-repository_public"><meta content="true" name="octolytics-dimension-repository_is_fork"><meta content="371425" name="octolytics-dimension-repository_parent_id"><meta content="owlient/phpredis" name="octolytics-dimension-repository_parent_nwo"><meta content="371425" name="octolytics-dimension-repository_network_root_id"><meta content="owlient/phpredis" name="octolytics-dimension-repository_network_root_nwo">
  <link href="https://github.com/nicolasff/phpredis/commits/master.atom" rel="alternate" title="Recent Commits to phpredis:master" type="application/atom+xml">

  <script src="phpredis-function_files/api.js" async="" type="text/javascript"></script></head>


  <body class="logged_out  env-production windows vis-public fork">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="https://github.com/join">Sign up</a>
      <a class="button signin" href="https://github.com/login?return_to=%2Fnicolasff%2Fphpredis">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
        <li class="features"><a href="https://github.com/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input data-hotkey="s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off" data-repo="nicolasff/phpredis" data-branch="master" data-sha="8ba0def29895b7cf9a397736b180383132a9bd88" type="text">
  <div class="display hidden"></div>
</div>

    <input name="nwo" value="nicolasff/phpredis" type="hidden">

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input class="js-search-this-repository" name="search_target" value="repository" checked="checked" type="radio">
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input name="search_target" value="global" type="radio">
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input name="ref" value="cmdform" type="hidden">

</form>
    </div>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope="" itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
      <a href="https://github.com/login?return_to=%2Fnicolasff%2Fphpredis" class="minibutton with-count star-button tooltipped tooltipped-n" aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="https://github.com/nicolasff/phpredis/stargazers">
      1,796
    </a>

  </li>

    <li>
      <a href="https://github.com/login?return_to=%2Fnicolasff%2Fphpredis" class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n" aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="https://github.com/nicolasff/phpredis/network" class="social-count">
        575
      </a>
    </li>
</ul>

        <h1 itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="https://github.com/nicolasff" class="url fn" itemprop="url" rel="author"><span itemprop="title">nicolasff</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="https://github.com/nicolasff/phpredis" class="js-current-repository js-repo-home-link">phpredis</a></strong>

          <span class="page-context-loader">
            <img alt="" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
          </span>

            <span class="fork-flag">
              <span class="text">forked from <a href="https://github.com/owlient/phpredis">owlient/phpredis</a></span>
            </span>
        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline with-full-navigation">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="https://github.com/nicolasff/phpredis" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /nicolasff/phpredis">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="https://github.com/nicolasff/phpredis/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /nicolasff/phpredis/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="counter">139</span>
            <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="https://github.com/nicolasff/phpredis/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /nicolasff/phpredis/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="counter">15</span>
            <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="https://github.com/nicolasff/phpredis/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /nicolasff/phpredis/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="https://github.com/nicolasff/phpredis/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /nicolasff/phpredis/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="https://github.com/nicolasff/phpredis/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /nicolasff/phpredis/network">
          <span class="octicon octicon-repo-forked"></span> <span class="full-word">Network</span>
          <img alt="" class="mini-loader" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open" data-protocol-type="http" data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input class="clone js-url-field" value="https://github.com/nicolasff/phpredis.git" readonly="readonly" type="text">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nicolasff/phpredis.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url " data-protocol-type="subversion" data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input class="clone js-url-field" value="https://github.com/nicolasff/phpredis" readonly="readonly" type="text">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nicolasff/phpredis" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com/" class="minibutton sidebar-button" title="Save nicolasff/phpredis to your computer and use it in GitHub Desktop." aria-label="Save nicolasff/phpredis to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="https://github.com/nicolasff/phpredis/archive/master.zip" class="minibutton sidebar-button" aria-label="Download nicolasff/phpredis as a zip file" title="Download nicolasff/phpredis as a zip file" rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container="">
          

<span id="js-show-full-navigation"></span>

<div class="repository-meta js-details-container ">
    <div class="repository-description js-details-show">
      <p>A PHP extension for Redis</p>
    </div>



</div>

<div class="capped-box overall-summary ">

  <div class="stats-switcher-viewport js-stats-switcher-viewport">
    <div class="stats-switcher-wrapper">
    <ul class="numbers-summary">
      <li class="commits">
        <a data-pjax="" href="https://github.com/nicolasff/phpredis/commits/master">
            <span class="num">
              <span class="octicon octicon-history"></span>
              963
            </span>
            commits
        </a>
      </li>
      <li>
        <a data-pjax="" href="https://github.com/nicolasff/phpredis/branches">
          <span class="num">
            <span class="octicon octicon-git-branch"></span>
            33
          </span>
          branches
        </a>
      </li>

      <li>
        <a data-pjax="" href="https://github.com/nicolasff/phpredis/releases">
          <span class="num">
            <span class="octicon octicon-tag"></span>
            44
          </span>
          releases
        </a>
      </li>

      <li>
        
  <a href="https://github.com/nicolasff/phpredis/graphs/contributors">
    <span class="num">
      <span class="octicon octicon-organization"></span>
      36
    </span>
    contributors
  </a>
      </li>
    </ul>

      <div class="repository-lang-stats">
        <ol class="repository-lang-stats-numbers">
          <li>
              <a href="https://github.com/nicolasff/phpredis/search?l=c">
                <span class="color-block language-color" style="background-color:#555;"></span>
                <span class="lang">C</span>
                <span class="percent">65.2%</span>
              </a>
          </li>
          <li>
              <a href="https://github.com/nicolasff/phpredis/search?l=php">
                <span class="color-block language-color" style="background-color:#4F5D95;"></span>
                <span class="lang">PHP</span>
                <span class="percent">34.5%</span>
              </a>
          </li>
          <li>
              <a href="https://github.com/nicolasff/phpredis/search?l=shell">
                <span class="color-block language-color" style="background-color:#5861ce;"></span>
                <span class="lang">Shell</span>
                <span class="percent">0.3%</span>
              </a>
          </li>
        </ol>
      </div>
    </div>
  </div>

</div>

  <div class="tooltipped tooltipped-s" aria-label="Show language statistics">
    <a href="#" class="repository-lang-stats-graph js-toggle-lang-stats" style="background-color:#5861ce">
  <span class="language-color" style="width:65.2%; background-color:#555;" itemprop="keywords">C</span><span class="language-color" style="width:34.5%; background-color:#4F5D95;" itemprop="keywords">PHP</span><span class="language-color" style="width:0.3%; background-color:#5861ce;" itemprop="keywords">Shell</span>
    </a>
  </div>



<div class="file-navigation in-mid-page">
  <div class="button-group right">
    <a href="https://github.com/nicolasff/phpredis/find/master" class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s" data-pjax="" data-hotkey="t" aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
  </div>
    <a href="https://github.com/nicolasff/phpredis/compare" aria-label="Compare, review, create a pull request" class="minibutton compact primary tooltipped tooltipped-s" data-pjax="">
      <span class="octicon octicon-git-compare"></span>
    </a>

  

<div class="select-menu js-menu-container js-select-menu">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w" data-master-branch="master" data-ref="master" title="master" role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax="" aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags" type="text">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/1.1" data-name="1.1" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="1.1">1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/develop" data-name="develop" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="develop">develop</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/client_doc_fmt" data-name="feature/client_doc_fmt" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/client_doc_fmt">feature/client_doc_fmt</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/generic-call" data-name="feature/generic-call" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/generic-call">feature/generic-call</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/hyperloglog" data-name="feature/hyperloglog" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/hyperloglog">feature/hyperloglog</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/mobli_ra_changes" data-name="feature/mobli_ra_changes" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/mobli_ra_changes">feature/mobli_ra_changes</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/new_set_args" data-name="feature/new_set_args" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/new_set_args">feature/new_set_args</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/pubsub_cmd" data-name="feature/pubsub_cmd" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/pubsub_cmd">feature/pubsub_cmd</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/ra_mset_intkeys" data-name="feature/ra_mset_intkeys" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/ra_mset_intkeys">feature/ra_mset_intkeys</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/redis_cluster" data-name="feature/redis_cluster" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/redis_cluster">feature/redis_cluster</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/scan_commands" data-name="feature/scan_commands" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/scan_commands">feature/scan_commands</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/sentinel_cmds" data-name="feature/sentinel_cmds" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/sentinel_cmds">feature/sentinel_cmds</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/session_catchable" data-name="feature/session_catchable" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/session_catchable">feature/session_catchable</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/feature/set_resp_2.8" data-name="feature/set_resp_2.8" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="feature/set_resp_2.8">feature/set_resp_2.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/close_command" data-name="hotfix/close_command" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/close_command">hotfix/close_command</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/double_precision" data-name="hotfix/double_precision" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/double_precision">hotfix/double_precision</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/eval_timeout_segfault" data-name="hotfix/eval_timeout_segfault" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/eval_timeout_segfault">hotfix/eval_timeout_segfault</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/mget_skip_empty" data-name="hotfix/mget_skip_empty" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/mget_skip_empty">hotfix/mget_skip_empty</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/multi_throw_on_timeout" data-name="hotfix/multi_throw_on_timeout" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/multi_throw_on_timeout">hotfix/multi_throw_on_timeout</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hotfix/ra_autorehash" data-name="hotfix/ra_autorehash" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hotfix/ra_autorehash">hotfix/ra_autorehash</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/json" data-name="json" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="json">json</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/master" data-name="master" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/multi" data-name="multi" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="multi">multi</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/pecl" data-name="pecl" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="pecl">pecl</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/php-numencode" data-name="php-numencode" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="php-numencode">php-numencode</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/psubscribe" data-name="psubscribe" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="psubscribe">psubscribe</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/ra-fixes" data-name="ra-fixes" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="ra-fixes">ra-fixes</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/ra-performance" data-name="ra-performance" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="ra-performance">ra-performance</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/refactor" data-name="refactor" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="refactor">refactor</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/serializer" data-name="serializer" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="serializer">serializer</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/session-failover" data-name="session-failover" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="session-failover">session-failover</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/subscribe_prefix" data-name="subscribe_prefix" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="subscribe_prefix">subscribe_prefix</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/variadic" data-name="variadic" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="variadic">variadic</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/srandmember_serialize" data-name="srandmember_serialize" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="srandmember_serialize">srandmember_serialize</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/setex_long_expires" data-name="setex_long_expires" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="setex_long_expires">setex_long_expires</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/redis_array_pconnect" data-name="redis_array_pconnect" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="redis_array_pconnect">redis_array_pconnect</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/ra_type_check" data-name="ra_type_check" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="ra_type_check">ra_type_check</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/ra_mget_segfault" data-name="ra_mget_segfault" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="ra_mget_segfault">ra_mget_segfault</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/ra_autorehash" data-name="ra_autorehash" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="ra_autorehash">ra_autorehash</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/php5.2_warnings" data-name="php5.2_warnings" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="php5.2_warnings">php5.2_warnings</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/mget_skip_empty" data-name="mget_skip_empty" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="mget_skip_empty">mget_skip_empty</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/inspection_methods" data-name="inspection_methods" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="inspection_methods">inspection_methods</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/incrbyfloat_docfix" data-name="incrbyfloat_docfix" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="incrbyfloat_docfix">incrbyfloat_docfix</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/incrby_float_prefix" data-name="incrby_float_prefix" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="incrby_float_prefix">incrby_float_prefix</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/hmget_invalid_args" data-name="hmget_invalid_args" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="hmget_invalid_args">hmget_invalid_args</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/eval_timeout_segfault" data-name="eval_timeout_segfault" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="eval_timeout_segfault">eval_timeout_segfault</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/eval_alias" data-name="eval_alias" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="eval_alias">eval_alias</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/echo_alias" data-name="echo_alias" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="echo_alias">echo_alias</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/double_precision" data-name="double_precision" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="double_precision">double_precision</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/comment_error" data-name="comment_error" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="comment_error">comment_error</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/close_command" data-name="close_command" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="close_command">close_command</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/bitops_offset" data-name="bitops_offset" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="bitops_offset">bitops_offset</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/allow_null_set_options" data-name="allow_null_set_options" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="allow_null_set_options">allow_null_set_options</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.5" data-name="2.2.5" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.5">2.2.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.4" data-name="2.2.4" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.4">2.2.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.3" data-name="2.2.3" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.3">2.2.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.2" data-name="2.2.2" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.2">2.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.1" data-name="2.2.1" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.1">2.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.2.0" data-name="2.2.0" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.2.0">2.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.1.3" data-name="2.1.3" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.1.3">2.1.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.1.2" data-name="2.1.2" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.1.2">2.1.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.1.1" data-name="2.1.1" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.1.1">2.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.1.0" data-name="2.1.0" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.1.0">2.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.12" data-name="2.0.12" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.12">2.0.12</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.11" data-name="2.0.11" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.11">2.0.11</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.10" data-name="2.0.10" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.10">2.0.10</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.9" data-name="2.0.9" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.9">2.0.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.8" data-name="2.0.8" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.8">2.0.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.7" data-name="2.0.7" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.7">2.0.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.6" data-name="2.0.6" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.6">2.0.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.5" data-name="2.0.5" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.5">2.0.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.4" data-name="2.0.4" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.4">2.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.3" data-name="2.0.3" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.3">2.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.2" data-name="2.0.2" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.2">2.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.1" data-name="2.0.1" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.1">2.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/2.0.0" data-name="2.0.0" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="2.0.0">2.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="https://github.com/nicolasff/phpredis/tree/1.2.0" data-name="1.2.0" data-skip-pjax="true" rel="nofollow" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" title="1.2.0">1.2.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->



  <div class="breadcrumb"><span class="repo-root js-repo-root"><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="https://github.com/nicolasff/phpredis" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">phpredis</span></a></span></span><span class="separator"> / </span><form action="/login?return_to=%2Fnicolasff%2Fphpredis" aria-label="Sign in to make or propose changes" class="js-new-blob-form tooltipped tooltipped-e new-file-link" method="post"><span aria-label="Sign in to make or propose changes" class="js-new-blob-submit octicon octicon-plus" data-test-id="create-new-git-file" role="button"></span></form></div>
</div>



    <div class="branch-infobar clearfix">
      <p>
          This branch is
          0 commits ahead and
          0 commits behind master
      </p>

      <ul class="lightweight-actions">
        <li>
            <a href="https://github.com/nicolasff/phpredis/pull/469">
              <span class="octicon octicon-git-pull-request"></span>
              #469
            </a>
        </li>
        <!--
        <li>
          <a href="#">
            <span class="octicon octicon-comment-discussion"></span>
            Branch discussion
          </a>
        </li>
        -->
        <li>
          <a href="https://github.com/nicolasff/phpredis/compare">
            <span class="octicon octicon-diff"></span>
            Compare
          </a>
        </li>
      </ul>

    </div>

  
  <div class="commit commit-tease js-details-container">
    <p class="commit-title ">
        <a href="https://github.com/nicolasff/phpredis/commit/b9a16b5ad5d8c80eac53f530f37e89761ec2c720" class="message" data-pjax="true" title="revert previous, and better fix for memory corruption (STR_FREE available since 5.0)">revert previous, and better fix for memory corruption (STR_FREE availâ¦</a>
        <span class="hidden-text-expander inline"><a href="#" class="js-details-target">â¦</a></span>
    </p>
      <div class="commit-desc"><pre>â¦able since 5.0)</pre></div>
    <div class="commit-meta">
      <button aria-label="Copy SHA" class="js-zeroclipboard zeroclipboard-link" data-clipboard-text="b9a16b5ad5d8c80eac53f530f37e89761ec2c720" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
      <a href="https://github.com/nicolasff/phpredis/commit/b9a16b5ad5d8c80eac53f530f37e89761ec2c720" class="sha-block" data-pjax="">latest commit <span class="sha">b9a16b5ad5</span></a>

      <div class="authorship">
        <img alt="Remi Collet" class="gravatar js-avatar" data-user="270445" src="phpredis-function_files/270445.png" height="20" width="20">
        <span class="author-name"><a href="https://github.com/remicollet" data-skip-pjax="true" rel="contributor">remicollet</a></span>
        authored <local-time class="updated" datetime="2014-03-20T15:06:40+01:00" from="now" title-format="%Y-%m-%d %H:%M:%S %z" title="2014-03-20 15:06:40 +0100">March 20, 2014</local-time>

      </div>
    </div>
  </div>

  <div class="file-wrap">
    <table class="files" data-pjax="">

      
<tbody class="" data-url="/nicolasff/phpredis/file-list/master" data-deferred-content-error="Failed to load latest commit information.">

    <tr>
      <td class="icon">
        <span class="octicon octicon-file-directory"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/tree/master/debian" class="js-directory-link" id="6e9552c9bd8e61c8f277c21220160234-a2ecc761406979117df3c6a190c94c46cdf6e59e" title="debian">debian</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/3f024f98d94f1f3c3a6674bb56dc64b411e01e3b" class="message" data-pjax="true" title="updating debianization">updating debianization</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2012å¹´11æ2æ¥ GMT+8ä¸å5:51" datetime="2012-11-02T09:51:04Z" is="time-ago">2 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-directory"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/tree/master/rpm" class="js-directory-link" id="455385f5d8493917cb83541909b7cfa9-1a5268cc1e3b01adeab1544c781a299170a24e62" title="rpm">rpm</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/94c369cfb6b67aa7a4d1374c7b840e94d57096b0" class="message" data-pjax="true" title="Incorporate PECL and rpm changes to reflect 2.2.5">Incorporate PECL and rpm changes to reflect 2.2.5</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ16æ¥ GMT+8ä¸å1:41" datetime="2014-03-15T17:41:14Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-directory"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/tree/master/tests" class="js-directory-link" id="b61a6d542f9036550ba9c401c80f00ef-cc5ce1e9d1cae1abb624535371d00345d0f209e0" title="tests">tests</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/6c37fa301d871efc99455305873330145be173c2" class="message" data-pjax="true" title="Merge branch 'feature/pubsub_cmd' into develop">Merge branch 'feature/pubsub_cmd' into develop</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ16æ¥ GMT+8ä¸å1:14" datetime="2014-03-15T17:14:41Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/COPYING" class="js-directory-link" id="7116ef0705885343c9e1b2171a06be0e-3cc8b777b77259046155b82f23e189d4c5c56d6e" title="COPYING">COPYING</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/120ffee41cb8b2939bbf286f6e22e5db7a58a107" class="message" data-pjax="true" title="Making sure licensing is clear.">Making sure licensing is clear.</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2011å¹´5æ21æ¥ GMT+8ä¸å3:47" datetime="2011-05-20T19:47:19Z" is="time-ago">3 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/CREDITS" class="js-directory-link" id="e5f53fee4717a20069da09aa7a0f614d-6c8626a8a60aa899383d6da4fb248826c6a8800d" title="CREDITS">CREDITS</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/2fc8e78711bb44dd863d5cfdb9976c6ae47dd428" class="message" data-pjax="true" title="Add my email to CREDITS file">Add my email to CREDITS file</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ19æ¥ GMT+8ä¸å11:19" datetime="2014-03-19T15:19:11Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/README.markdown" class="js-directory-link" id="0a369498a5a8db3ac8fa606b544c9810-634193ac6f57b86edba6e560f0cda2acdbf559ae" title="README.markdown">README.markdown</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/6c37fa301d871efc99455305873330145be173c2" class="message" data-pjax="true" title="Merge branch 'feature/pubsub_cmd' into develop">Merge branch 'feature/pubsub_cmd' into develop</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ16æ¥ GMT+8ä¸å1:14" datetime="2014-03-15T17:14:41Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/arrays.markdown" class="js-directory-link" id="3bb7d26eb97962eef8c33925791cc6f7-b12208916258a4637e57ae710ea5c30fd918bdca" title="arrays.markdown">arrays.markdown</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/eb0bbbafa048d7948c14fbc3957247135c19bff6" class="message" data-pjax="true" title="Rollback the automatic resharding distributor

I accidentally pulled this when getting some of the pull requests
integrated (git flow style) for this release.  I like the idea
for sure, but I think it needs more detailed documentation and
further testing.

At the very least, I need to understand it :)">Rollback the automatic resharding distributor</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2013å¹´9æ1æ¥ GMT+8ä¸å10:20" datetime="2013-09-01T02:20:34Z" is="time-ago">10 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/common.h" class="js-directory-link" id="32f5bec80fb31433871b09021cec741d-a0623fbdc704e0d34e0a4d94f2d9ed45879833c1" title="common.h">common.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/48ae8e52f6c37e5fea607ed64959f6e7a6712850" class="message" data-pjax="true" title="Implement PUBSUB command

This commit implements the Redis PUBSUB command, a new command
available since Redis 2.8.0 and described here:
http://redis.io/commands/pubsub

Addresses #427">Implement PUBSUB command</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´1æ22æ¥ GMT+8ä¸å6:50" datetime="2014-01-21T22:50:34Z" is="time-ago">5 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/config.h" class="js-directory-link" id="98ba56d25d28991fe5fb1f3fe240d0e1-00c355bdcda5d5615ae1f286ca6dedc87a522fd6" title="config.h">config.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/dcbeae7599ccc1fe0310d67ba29629c3774084d5" class="message" data-pjax="true" title="Persistent connections with RedisArray

Re-integrating the now old ra-performance branch into a git-flow
branch.  I could have merged it but this was easier with so few
changes">Persistent connections with RedisArray</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2013å¹´8æ11æ¥ GMT+8ä¸å11:54" datetime="2013-08-11T15:54:59Z" is="time-ago">10 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/config.m4" class="js-directory-link" id="788d457a20b110cc38e571dec9ddc68c-205a858c200b08d22b738d4508317547811606d6" title="config.m4">config.m4</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/2b0cd7715f325b099f18b5934565859f207afa4a" class="message" data-pjax="true" title="Fix include path for igbinary support">Fix include path for igbinary support</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2012å¹´10æ25æ¥ GMT+8ä¸å3:41" datetime="2012-10-25T07:41:12Z" is="time-ago">2 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/config.w32" class="js-directory-link" id="0a3a38c0c9a95c76dc474e429d969e67-8b39af9057d5a4be31ae736ccd9e637d2afe5e37" title="config.w32">config.w32</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/c9a6ce2cf4c15e7c0324da3bfc17cc28017fc157" class="message" data-pjax="true" title="Build fix for win32 (phpredis 2.1.3)">Build fix for win32 (phpredis 2.1.3)</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2011å¹´6æ30æ¥ GMT+8ä¸å10:17" datetime="2011-06-30T14:17:23Z" is="time-ago">3 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/debian.control" class="js-directory-link" id="69bf6ab96bc62bf21fcc145d3fbf496a-0a5fe73847e32d05000c02356a0bd332493d75a3" title="debian.control">debian.control</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/f4960ddec2aa5f5875541498b4fdb67d40eacae3" class="message" data-pjax="true" title="Release version 2.2.4">Release version 2.2.4</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2013å¹´9æ2æ¥ GMT+8ä¸å3:24" datetime="2013-09-01T19:24:09Z" is="time-ago">10 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/library.c" class="js-directory-link" id="c5867178362a2abccbf1419f7363735c-b0f15db4a5ad382ac5bd5270ff5c67f3f9689f05" title="library.c">library.c</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/b9a16b5ad5d8c80eac53f530f37e89761ec2c720" class="message" data-pjax="true" title="revert previous, and better fix for memory corruption (STR_FREE available since 5.0)">revert previous, and better fix for memory corruption (STR_FREE availâ¦</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ20æ¥ GMT+8ä¸å10:06" datetime="2014-03-20T14:06:40Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/library.h" class="js-directory-link" id="6625a49d42ef24288628c157e0e4e7f2-666d6addcaf158b4d2ab967b003d0647277ae5cf" title="library.h">library.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/8f006cba2d20479a3b15741fc1a0c801aec4c246" class="message" data-pjax="true" title="Properly fix TRMLS_CC references :)">Properly fix TRMLS_CC references :)</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´2æ26æ¥ GMT+8ä¸å10:59" datetime="2014-02-26T14:59:11Z" is="time-ago">4 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/mkdeb-apache2.sh" class="js-directory-link" id="531835eb3a501782307ca7e6bb7c6c31-f546d48564d22bf2139b121327b897f8244491a3" title="mkdeb-apache2.sh">mkdeb-apache2.sh</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/c55a28344594540eb8e626a789845fac2d39df2b" class="message" data-pjax="true" title="Refactoring">Refactoring</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2010å¹´9æ17æ¥ GMT+8ä¸å7:57" datetime="2010-09-17T11:57:40Z" is="time-ago">4 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/mkdeb.sh" class="js-directory-link" id="42153b60001952adcc183ce505c4f4e1-ba4874171a49699a527935f60f4f34e4b349637d" title="mkdeb.sh">mkdeb.sh</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/42e2c340a59e66e0f3af195a542635f7b414d861" class="message" data-pjax="true" title="Correct debian package filename.
Unified php5/conf.d support.">Correct debian package filename.</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2012å¹´4æ2æ¥ GMT+8ä¸å8:32" datetime="2012-04-02T12:32:45Z" is="time-ago">2 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/package.xml" class="js-directory-link" id="34ae68f4adad56c25c5bc05dcb64794e-f008cfb128d32bdfcf9a09949db382b5d0c33100" title="package.xml">package.xml</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/a6aa390675a2fa51ad7dfdf38adf3146dc7a7876" class="message" data-pjax="true" title="add tests to pecl package, fixed #332">add tests to pecl package, fixed</a> <a href="https://github.com/nicolasff/phpredis/issues/332" class="issue-link" title="Please add tests folder to package.xml">#332</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ20æ¥ GMT+8ä¸å4:28" datetime="2014-03-20T08:28:27Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/php_redis.h" class="js-directory-link" id="b9239a3d90b041b3dd5992a1e5da0e51-80ba22fbd9aa904b84ecd21feb65241e21e2a7c8" title="php_redis.h">php_redis.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/1d47fc8813ee0c975935b79830397ad34ec30ce6" class="message" data-pjax="true" title="Bump!">Bump!</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ16æ¥ GMT+8ä¸å1:20" datetime="2014-03-15T17:20:55Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis.c" class="js-directory-link" id="6fb31fe7e4f4b06bbb2522a6dc6bae14-8c12657ae8378ccfbf114ec4e29a416a96ea7d8b" title="redis.c">redis.c</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/b9a16b5ad5d8c80eac53f530f37e89761ec2c720" class="message" data-pjax="true" title="revert previous, and better fix for memory corruption (STR_FREE available since 5.0)">revert previous, and better fix for memory corruption (STR_FREE availâ¦</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ20æ¥ GMT+8ä¸å10:06" datetime="2014-03-20T14:06:40Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_array.c" class="js-directory-link" id="fa1e4e03afc836a939950c924e70b4a2-36254df04f1c9cb3508b82f49c0aa59ed55bcad5" title="redis_array.c">redis_array.c</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/c81a95413d41fac7871e4bd6b77122bb2226ddb3" class="message" data-pjax="true" title="Merge branch 'hotfix/ra_autorehash' into develop

Conflicts:
	redis_array.c">Merge branch 'hotfix/ra_autorehash' into develop</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ12æ¥ GMT+8ä¸å12:14" datetime="2014-03-11T16:14:26Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_array.h" class="js-directory-link" id="d9c48ec03f0e8ab20b8f00d2322bd5c7-1be2813af7451995e9fe3ca3a63c4dd061cf345b" title="redis_array.h">redis_array.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/6f5e47cec331a2997e35d0226c07be0035aa647e" class="message" data-pjax="true" title="add support for 'connect_timeout' option for redis arrays
Conflicts:
	redis_array.c
	redis_array_impl.c
	redis_array_impl.h">add support for 'connect_timeout' option for redis arrays</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´2æ24æ¥ GMT+8ä¸å3:50" datetime="2014-02-23T19:50:34Z" is="time-ago">4 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_array_impl.c" class="js-directory-link" id="fb09df20b4272e09ecdb224bca998a78-615f503bc021cb0e319c658bf6688e451cf70bd6" title="redis_array_impl.c">redis_array_impl.c</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/c81a95413d41fac7871e4bd6b77122bb2226ddb3" class="message" data-pjax="true" title="Merge branch 'hotfix/ra_autorehash' into develop

Conflicts:
	redis_array.c">Merge branch 'hotfix/ra_autorehash' into develop</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´3æ12æ¥ GMT+8ä¸å12:14" datetime="2014-03-11T16:14:26Z" is="time-ago">3 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_array_impl.h" class="js-directory-link" id="118b94dd55abe455830952bee217faca-4c2a1b05bdb872e1e3432025b024476bbd7deba4" title="redis_array_impl.h">redis_array_impl.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/6f5e47cec331a2997e35d0226c07be0035aa647e" class="message" data-pjax="true" title="add support for 'connect_timeout' option for redis arrays
Conflicts:
	redis_array.c
	redis_array_impl.c
	redis_array_impl.h">add support for 'connect_timeout' option for redis arrays</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2014å¹´2æ24æ¥ GMT+8ä¸å3:50" datetime="2014-02-23T19:50:34Z" is="time-ago">4 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_session.c" class="js-directory-link" id="a8c2cac018b55b5883b8faad30efbfb4-591f07b84eb5bc7ed8a6bf73dbbdd0ebe178b53a" title="redis_session.c">redis_session.c</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/8443769dc3e9bb25bc13e069e1b939d9f0ee8991" class="message" data-pjax="true" title="Merge remote-tracking branch 'mobli/develop' into feature/mobli_ra_changes

Conflicts:
	redis_array.c
	redis_array_impl.c
	redis_array_impl.h">Merge remote-tracking branch 'mobli/develop' into feature/mobli_ra_châ¦</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2013å¹´8æ12æ¥ GMT+8ä¸å2:29" datetime="2013-08-11T18:29:29Z" is="time-ago">10 months ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/redis_session.h" class="js-directory-link" id="c3edd2d4ae6c0581169d031212308c6b-ce74e23f6bd249ff2a7e7dff821c16b1531b19f5" title="redis_session.h">redis_session.h</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/73d99c3ec85d7b4da6e0b187e5a396335db72d35" class="message" data-pjax="true" title="Added configure flag to disable sessions.">Added configure flag to disable sessions.</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2011å¹´6æ26æ¥ GMT+8ä¸å6:09" datetime="2011-06-25T22:09:09Z" is="time-ago">3 years ago</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" src="phpredis-function_files/octocat-spinner-32.gif" height="16" width="16">
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="https://github.com/nicolasff/phpredis/blob/master/serialize.list" class="js-directory-link" id="fc810a6bff09bf6ad0ce43b3b27e492f-d0971e287a82fb58f6680ca2b7bf3a3d79bf4e5b" title="serialize.list">serialize.list</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="https://github.com/nicolasff/phpredis/commit/40780e0fe3393978113658d434599352c612c0ce" class="message" data-pjax="true" title="Fixed tests, tested getMultiple.">Fixed tests, tested getMultiple.</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time title="2010å¹´12æ13æ¥ GMT+8ä¸å5:25" datetime="2010-12-12T21:25:08Z" is="time-ago">4 years ago</time></span>
      </td>
    </tr>
</tbody>

    </table>
  </div>


  <div id="readme" class="clearfix announce instapaper_body markdown">
    <span class="name">
      <span class="octicon octicon-book"></span>
      README.markdown
    </span>

    <article class="markdown-body entry-content" itemprop="mainContentOfPage"><h1>
<a name="user-content-phpredis" class="anchor" href="#phpredis"><span class="octicon octicon-link"></span></a>PhpRedis</h1>

<p>The phpredis extension provides an API for communicating with the <a href="http://redis.io/">Redis</a> key-value store. It is released under the <a href="http://www.php.net/license/3_01.txt">PHP License, version 3.01</a>.
This code has been developed and maintained by Owlient from November 2009 to March 2011.</p>

<p>You can send comments, patches, questions <a href="https://github.com/nicolasff/phpredis/issues">here on github</a>, to <a href="mailto:n.favrefelix@gmail.com">n.favrefelix@gmail.com</a> (<a href="http://twitter.com/yowgi">@yowgi</a>), or to <a href="mailto:michael.grunder@gmail.com">michael.grunder@gmail.com</a> (<a href="http://twitter.com/grumi78">@grumi78</a>).</p>

<h1>
<a name="user-content-table-of-contents" class="anchor" href="#table-of-contents"><span class="octicon octicon-link"></span></a>Table of contents</h1>

<hr><ol class="task-list">
<li>
<a href="#installingconfiguring">Installing/Configuring</a>

<ul class="task-list">
<li><a href="#installation">Installation</a></li>
<li><a href="#installation-on-osx">Installation on OSX</a></li>
<li><a href="#building-on-windows">Building on Windows</a></li>
<li><a href="#php-session-handler">PHP Session handler</a></li>
<li><a href="#distributed-redis-array">Distributed Redis Array</a></li>
</ul>
</li>
<li>
<a href="#classes-and-methods">Classes and methods</a>

<ul class="task-list">
<li><a href="#usage">Usage</a></li>
<li><a href="#connection">Connection</a></li>
<li><a href="#server">Server</a></li>
<li><a href="#keys-and-strings">Keys and strings</a></li>
<li><a href="#hashes">Hashes</a></li>
<li><a href="#lists">Lists</a></li>
<li><a href="#sets">Sets</a></li>
<li><a href="#sorted-sets">Sorted sets</a></li>
<li><a href="#pubsub">Pub/sub</a></li>
<li><a href="#transactions">Transactions</a></li>
<li><a href="#scripting">Scripting</a></li>
<li>
<a href="#introspection">Introspection</a> </li>
</ul>
</li>
</ol><hr><h1>
<a name="user-content-installingconfiguring" class="anchor" href="#installingconfiguring"><span class="octicon octicon-link"></span></a>Installing/Configuring</h1>

<hr><p>Everything you should need to install PhpRedis on your system.</p>

<h2>
<a name="user-content-installation" class="anchor" href="#installation"><span class="octicon octicon-link"></span></a>Installation</h2>

<pre><code>phpize
./configure [--enable-redis-igbinary]
make &amp;&amp; make install
</code></pre>

<p>If you would like phpredis to serialize your data using the igbinary library, run configure with <code>--enable-redis-igbinary</code>.
<code>make install</code> copies <code>redis.so</code> to an appropriate
 location, but you still need to enable the module in the PHP config 
file. To do so, either edit your php.ini or add a redis.ini file in <code>/etc/php5/conf.d</code> with the following contents: <code>extension=redis.so</code>.</p>

<p>You can generate a debian package for PHP5, accessible from Apache 2 by running <code>./mkdeb-apache2.sh</code> or with <code>dpkg-buildpackage</code> or <code>svn-buildpackage</code>.</p>

<p>This extension exports a single class, <a href="#class-redis">Redis</a> (and <a href="#class-redisexception">RedisException</a> used in case of errors). Check out <a href="https://github.com/ukko/phpredis-phpdoc">https://github.com/ukko/phpredis-phpdoc</a> for a PHP stub that you can use in your IDE for code completion.</p>

<h2>
<a name="user-content-installation-on-osx" class="anchor" href="#installation-on-osx"><span class="octicon octicon-link"></span></a>Installation on OSX</h2>

<p>If the install fails on OSX, type the following commands in your shell before trying again:</p>

<pre><code>MACOSX_DEPLOYMENT_TARGET=10.6
CFLAGS="-arch i386 -arch x86_64 -g -Os -pipe -no-cpp-precomp"
CCFLAGS="-arch i386 -arch x86_64 -g -Os -pipe"
CXXFLAGS="-arch i386 -arch x86_64 -g -Os -pipe"
LDFLAGS="-arch i386 -arch x86_64 -bind_at_load"
export CFLAGS CXXFLAGS LDFLAGS CCFLAGS MACOSX_DEPLOYMENT_TARGET
</code></pre>

<p>If that still fails and you are running Zend Server CE, try this right before "make": <code>./configure CFLAGS="-arch i386"</code>.</p>

<p>Taken from <a href="http://www.tumblr.com/tagged/phpredis">Compiling phpredis on Zend Server CE/OSX </a>.</p>

<p>See also: <a href="http://www.lecloud.net/post/3378834922/install-redis-php-extension-phpredis-with-macports">Install Redis &amp; PHP Extension PHPRedis with Macports</a>.</p>

<p>You can install install it using Homebrew:</p>

<ul class="task-list">
<li><a href="https://github.com/josegonzalez/homebrew-php">Get homebrew-php</a></li>
<li>
<code>brew install php55-redis</code> (or php53-redis, php54-redis)</li>
</ul><h2>
<a name="user-content-php-session-handler" class="anchor" href="#php-session-handler"><span class="octicon octicon-link"></span></a>PHP Session handler</h2>

<p>phpredis can be used to store PHP sessions. To do this, configure <code>session.save_handler</code> and <code>session.save_path</code> in your php.ini to tell phpredis where to store the sessions:</p>

<pre><code>session.save_handler = redis
session.save_path = "tcp://host1:6379?weight=1, tcp://host2:6379?weight=2&amp;timeout=2.5, tcp://host3:6379?weight=2"
</code></pre>

<p><code>session.save_path</code> can have a simple <code>host:port</code> format too, but you need to provide the <code>tcp://</code> scheme if you want to use the parameters. The following parameters are available:</p>

<ul class="task-list">
<li>weight (integer): the weight of a host is used in comparison with 
the others in order to customize the session distribution on several 
hosts. If host A has twice the weight of host B, it will get twice the 
amount of sessions. In the example, <em>host1</em> stores 20% of all the sessions (1/(1+2+2)) while <em>host2</em> and <em>host3</em>
 each store 40% (2/1+2+2). The target host is determined once and for 
all at the start of the session, and doesn't change. The default weight 
is 1.</li>
<li>timeout (float): the connection timeout to a redis host, expressed 
in seconds. If the host is unreachable in that amount of time, the 
session storage will be unavailable for the client. The default timeout 
is very high (86400 seconds).</li>
<li>persistent (integer, should be 1 or 0): defines if a persistent connection should be used. <strong>(experimental setting)</strong>
</li>
<li>prefix (string, defaults to "PHPREDIS_SESSION:"): used as a prefix 
to the Redis key in which the session is stored. The key is composed of 
the prefix followed by the session ID.</li>
<li>auth (string, empty by default): used to authenticate with the server prior to sending commands.</li>
<li>database (integer): selects a different database.</li>
</ul><p>Sessions have a lifetime expressed in seconds and stored in the INI variable "session.gc_maxlifetime". You can change it with <a href="http://php.net/ini_set"><code>ini_set()</code></a>.
The session handler requires a version of Redis with the <code>SETEX</code> command (at least 2.0).
phpredis can also connect to a unix domain socket: <code>session.save_path = "unix:///var/run/redis/redis.sock?persistent=1&amp;weight=1&amp;database=0</code>.</p>

<h2>
<a name="user-content-building-on-windows" class="anchor" href="#building-on-windows"><span class="octicon octicon-link"></span></a>Building on Windows</h2>

<p>See <a href="https://github.com/nicolasff/phpredis/issues/213#issuecomment-11361242">instructions from @char101</a> on how to build phpredis on Windows.</p>

<h2>
<a name="user-content-distributed-redis-array" class="anchor" href="#distributed-redis-array"><span class="octicon octicon-link"></span></a>Distributed Redis Array</h2>

<p>See <a href="https://github.com/nicolasff/phpredis/blob/master/arrays.markdown#readme">dedicated page</a>.</p>

<h1>
<a name="user-content-classes-and-methods" class="anchor" href="#classes-and-methods"><span class="octicon octicon-link"></span></a>Classes and methods</h1>

<hr><h2>
<a name="user-content-usage" class="anchor" href="#usage"><span class="octicon octicon-link"></span></a>Usage</h2>

<ol class="task-list">
<li><a href="#class-redis">Class Redis</a></li>
<li><a href="#class-redisexception">Class RedisException</a></li>
<li><a href="#predefined-constants">Predefined constants</a></li>
</ol><h3>
<a name="user-content-class-redis" class="anchor" href="#class-redis"><span class="octicon octicon-link"></span></a>Class Redis</h3>

<hr><p><em><strong>Description</strong></em>: Creates a Redis client</p>

<h5>
<a name="user-content-example" class="anchor" href="#example"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis = new Redis();
</code></pre>

<h3>
<a name="user-content-class-redisexception" class="anchor" href="#class-redisexception"><span class="octicon octicon-link"></span></a>Class RedisException</h3>

<hr><p>phpredis throws a <a href="#class-redisexception">RedisException</a> object if it can't reach the Redis server. That can happen in case of connectivity issues,
if the Redis service is down, or if the redis host is overloaded. In any other problematic case that does not involve an
unreachable server (such as a key not existing, an invalid command, etc), phpredis will return <code>FALSE</code>.</p>

<h3>
<a name="user-content-predefined-constants" class="anchor" href="#predefined-constants"><span class="octicon octicon-link"></span></a>Predefined constants</h3>

<hr><p><em><strong>Description</strong></em>: Available Redis Constants</p>

<p>Redis data types, as returned by <a href="#type">type</a></p>

<pre><code>Redis::REDIS_STRING - String
Redis::REDIS_SET - Set
Redis::REDIS_LIST - List
Redis::REDIS_ZSET - Sorted set
Redis::REDIS_HASH - Hash
Redis::REDIS_NOT_FOUND - Not found / other
</code></pre>

<p>@TODO: OPT_SERIALIZER, AFTER, BEFORE,...</p>

<h2>
<a name="user-content-connection" class="anchor" href="#connection"><span class="octicon octicon-link"></span></a>Connection</h2>

<ol class="task-list">
<li>
<a href="#connect-open">connect, open</a> - Connect to a server</li>
<li>
<a href="#pconnect-popen">pconnect, popen</a> - Connect to a server (persistent)</li>
<li>
<a href="#auth">auth</a> - Authenticate to the server</li>
<li>
<a href="#select">select</a> - Change the selected database for the current connection</li>
<li>
<a href="#close">close</a> - Close the connection</li>
<li>
<a href="#setoption">setOption</a> - Set client option</li>
<li>
<a href="#getoption">getOption</a> - Get client option</li>
<li>
<a href="#ping">ping</a> - Ping the server</li>
<li>
<a href="#echo">echo</a> - Echo the given string</li>
</ol><h3>
<a name="user-content-connect-open" class="anchor" href="#connect-open"><span class="octicon octicon-link"></span></a>connect, open</h3>

<hr><p><em><strong>Description</strong></em>: Connects to a Redis instance.</p>

<h5>
<a name="user-content-parameters" class="anchor" href="#parameters"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>host</em>: string. can be a host, or the path to a unix domain socket<br><em>port</em>: int, optional<br><em>timeout</em>: float, value in seconds (optional, default is 0 meaning unlimited)<br><em>reserved</em>: should be NULL if retry_interval is specified
<em>retry_interval</em>: int, value in milliseconds (optional)</p>

<h5>
<a name="user-content-return-value" class="anchor" href="#return-value"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> on success, <code>FALSE</code> on error.</p>

<h5>
<a name="user-content-example-1" class="anchor" href="#example-1"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;connect('127.0.0.1', 6379);
$redis-&gt;connect('127.0.0.1'); // port 6379 by default
$redis-&gt;connect('127.0.0.1', 6379, 2.5); // 2.5 sec timeout.
$redis-&gt;connect('/tmp/redis.sock'); // unix domain socket.
$redis-&gt;connect('127.0.0.1', 6379, 1, NULL, 100); // 1 sec timeout, 100ms delay between reconnection attempts.
</code></pre>

<h3>
<a name="user-content-pconnect-popen" class="anchor" href="#pconnect-popen"><span class="octicon octicon-link"></span></a>pconnect, popen</h3>

<hr><p><em><strong>Description</strong></em>: Connects to a Redis instance or reuse a connection already established with <code>pconnect</code>/<code>popen</code>.</p>

<p>The connection will not be closed on <code>close</code> or end of request until the php process ends.
So be patient on to many open FD's (specially on redis server side) when using persistent
connections on many servers connecting to one redis server.</p>

<p>Also more than one persistent connection can be made identified by either host + port + timeout
or host + persistent_id or unix socket + timeout.</p>

<p>This feature is not available in threaded versions. <code>pconnect</code> and <code>popen</code> then working like their non
persistent equivalents.</p>

<h5>
<a name="user-content-parameters-1" class="anchor" href="#parameters-1"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>host</em>: string. can be a host, or the path to a unix domain socket<br><em>port</em>: int, optional<br><em>timeout</em>: float, value in seconds (optional, default is 0 meaning unlimited)<br><em>persistent_id</em>: string. identity for the requested persistent connection
<em>retry_interval</em>: int, value in milliseconds (optional)</p>

<h5>
<a name="user-content-return-value-1" class="anchor" href="#return-value-1"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> on success, <code>FALSE</code> on error.</p>

<h5>
<a name="user-content-example-2" class="anchor" href="#example-2"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;pconnect('127.0.0.1', 6379);
$redis-&gt;pconnect('127.0.0.1'); // port 6379 by default - same connection like before.
$redis-&gt;pconnect('127.0.0.1', 6379, 2.5); // 2.5 sec timeout and would be another connection than the two before.
$redis-&gt;pconnect('127.0.0.1', 6379, 2.5, 'x'); // x is sent as persistent_id and would be another connection the the three before.
$redis-&gt;pconnect('/tmp/redis.sock'); // unix domain socket - would be another connection than the four before.
</code></pre>

<h3>
<a name="user-content-auth" class="anchor" href="#auth"><span class="octicon octicon-link"></span></a>auth</h3>

<hr><p><em><strong>Description</strong></em>: Authenticate the connection using a password.
<em>Warning</em>: The password is sent in plain-text over the network.</p>

<h5>
<a name="user-content-parameters-2" class="anchor" href="#parameters-2"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>STRING</em>: password</p>

<h5>
<a name="user-content-return-value-2" class="anchor" href="#return-value-2"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> if the connection is authenticated, <code>FALSE</code> otherwise.</p>

<h5>
<a name="user-content-example-3" class="anchor" href="#example-3"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;auth('foobared');
</code></pre>

<h3>
<a name="user-content-select" class="anchor" href="#select"><span class="octicon octicon-link"></span></a>select</h3>

<hr><p><em><strong>Description</strong></em>: Change the selected database for the current connection.</p>

<h5>
<a name="user-content-parameters-3" class="anchor" href="#parameters-3"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>INTEGER</em>: dbindex, the database number to switch to.</p>

<h5>
<a name="user-content-return-value-3" class="anchor" href="#return-value-3"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-4" class="anchor" href="#example-4"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<p>See method for example: <a href="#move">move</a></p>

<h3>
<a name="user-content-close" class="anchor" href="#close"><span class="octicon octicon-link"></span></a>close</h3>

<hr><p><em><strong>Description</strong></em>: Disconnects from the Redis instance, except when <code>pconnect</code> is used.</p>

<h3>
<a name="user-content-setoption" class="anchor" href="#setoption"><span class="octicon octicon-link"></span></a>setOption</h3>

<hr><p><em><strong>Description</strong></em>: Set client option.</p>

<h5>
<a name="user-content-parameters-4" class="anchor" href="#parameters-4"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>parameter name</em><br><em>parameter value</em>  </p>

<h5>
<a name="user-content-return-value-4" class="anchor" href="#return-value-4"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> on success, <code>FALSE</code> on error.</p>

<h5>
<a name="user-content-example-5" class="anchor" href="#example-5"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_NONE);   // don't serialize data
$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_PHP);    // use built-in serialize/unserialize
$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_IGBINARY);   // use igBinary serialize/unserialize

$redis-&gt;setOption(Redis::OPT_PREFIX, 'myAppName:'); // use custom prefix on all keys

/* Options for the SCAN family of commands, indicating whether to abstract
   empty results from the user.  If set to SCAN_NORETRY (the default), phpredis
   will just issue one SCAN command at a time, sometimes returning an empty
   array of results.  If set to SCAN_RETRY, phpredis will retry the scan command
   until keys come back OR Redis returns an iterator of zero
*/
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_NORETRY);
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY);
</code></pre>

<h3>
<a name="user-content-getoption" class="anchor" href="#getoption"><span class="octicon octicon-link"></span></a>getOption</h3>

<hr><p><em><strong>Description</strong></em>: Get client option.</p>

<h5>
<a name="user-content-parameters-5" class="anchor" href="#parameters-5"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>parameter name</em>  </p>

<h5>
<a name="user-content-return-value-5" class="anchor" href="#return-value-5"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>Parameter value.</p>

<h5>
<a name="user-content-example-6" class="anchor" href="#example-6"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;getOption(Redis::OPT_SERIALIZER);   // return Redis::SERIALIZER_NONE, Redis::SERIALIZER_PHP, or Redis::SERIALIZER_IGBINARY.
</code></pre>

<h3>
<a name="user-content-ping" class="anchor" href="#ping"><span class="octicon octicon-link"></span></a>ping</h3>

<hr><p><em><strong>Description</strong></em>: Check the current connection status</p>

<h5>
<a name="user-content-parameters-6" class="anchor" href="#parameters-6"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>(none)</p>

<h5>
<a name="user-content-return-value-6" class="anchor" href="#return-value-6"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em>: <code>+PONG</code> on success. Throws a <a href="#class-redisexception">RedisException</a> object on connectivity error, as described above.</p>

<h3>
<a name="user-content-echo" class="anchor" href="#echo"><span class="octicon octicon-link"></span></a>echo</h3>

<hr><p><em><strong>Description</strong></em>: Sends a string to Redis, which replies with the same string</p>

<h5>
<a name="user-content-parameters-7" class="anchor" href="#parameters-7"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>STRING</em>: The message to send.</p>

<h5>
<a name="user-content-return-value-7" class="anchor" href="#return-value-7"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em>: the same message.</p>

<h2>
<a name="user-content-server" class="anchor" href="#server"><span class="octicon octicon-link"></span></a>Server</h2>

<ol class="task-list">
<li>
<a href="#bgrewriteaof">bgrewriteaof</a> - Asynchronously rewrite the append-only file</li>
<li>
<a href="#bgsave">bgsave</a> - Asynchronously save the dataset to disk (in background)</li>
<li>
<a href="#config">config</a> - Get or Set the Redis server configuration parameters</li>
<li>
<a href="#dbsize">dbSize</a> - Return the number of keys in selected database</li>
<li>
<a href="#flushall">flushAll</a> - Remove all keys from all databases</li>
<li>
<a href="#flushdb">flushDB</a> - Remove all keys from the current database</li>
<li>
<a href="#info">info</a> - Get information and statistics about the server</li>
<li>
<a href="#lastsave">lastSave</a> - Get the timestamp of the last disk save</li>
<li>
<a href="#resetstat">resetStat</a> - Reset the stats returned by <a href="#info">info</a> method.</li>
<li>
<a href="#save">save</a> - Synchronously save the dataset to disk (wait to complete)</li>
<li>
<a href="#slaveof">slaveof</a> - Make the server a slave of another instance, or promote it to master</li>
<li>
<a href="#time">time</a> - Return the current server time</li>
<li>
<a href="#slowlog">slowlog</a> - Access the Redis slowlog entries</li>
</ol><h3>
<a name="user-content-bgrewriteaof" class="anchor" href="#bgrewriteaof"><span class="octicon octicon-link"></span></a>bgrewriteaof</h3>

<hr><p><em><strong>Description</strong></em>: Start the background rewrite of AOF (Append-Only File)</p>

<h5>
<a name="user-content-parameters-8" class="anchor" href="#parameters-8"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-8" class="anchor" href="#return-value-8"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-7" class="anchor" href="#example-7"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;bgrewriteaof();
</code></pre>

<h3>
<a name="user-content-bgsave" class="anchor" href="#bgsave"><span class="octicon octicon-link"></span></a>bgsave</h3>

<hr><p><em><strong>Description</strong></em>: Asynchronously save the dataset to disk (in background)</p>

<h5>
<a name="user-content-parameters-9" class="anchor" href="#parameters-9"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-9" class="anchor" href="#return-value-9"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure. If a save is already running, this command will fail and return <code>FALSE</code>.</p>

<h5>
<a name="user-content-example-8" class="anchor" href="#example-8"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;bgSave();
</code></pre>

<h3>
<a name="user-content-config" class="anchor" href="#config"><span class="octicon octicon-link"></span></a>config</h3>

<hr><p><em><strong>Description</strong></em>: Get or Set the Redis server configuration parameters.</p>

<h5>
<a name="user-content-parameters-10" class="anchor" href="#parameters-10"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>operation</em> (string) either <code>GET</code> or <code>SET</code><br><em>key</em> string for <code>SET</code>, glob-pattern for <code>GET</code>. See <a href="http://redis.io/commands/config-get">http://redis.io/commands/config-get</a> for examples.<br><em>value</em> optional string (only for <code>SET</code>)</p>

<h5>
<a name="user-content-return-value-10" class="anchor" href="#return-value-10"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Associative array</em> for <code>GET</code>, key -&gt; value<br><em>bool</em> for <code>SET</code></p>

<h5>
<a name="user-content-examples" class="anchor" href="#examples"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;config("GET", "*max-*-entries*");
$redis-&gt;config("SET", "dir", "/var/run/redis/dumps/");
</code></pre>

<h3>
<a name="user-content-dbsize" class="anchor" href="#dbsize"><span class="octicon octicon-link"></span></a>dbSize</h3>

<hr><p><em><strong>Description</strong></em>: Return the number of keys in selected database.</p>

<h5>
<a name="user-content-parameters-11" class="anchor" href="#parameters-11"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-11" class="anchor" href="#return-value-11"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em>: DB size, in number of keys.</p>

<h5>
<a name="user-content-example-9" class="anchor" href="#example-9"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$count = $redis-&gt;dbSize();
echo "Redis has $count keys\n";
</code></pre>

<h3>
<a name="user-content-flushall" class="anchor" href="#flushall"><span class="octicon octicon-link"></span></a>flushAll</h3>

<hr><p><em><strong>Description</strong></em>: Remove all keys from all databases.</p>

<h5>
<a name="user-content-parameters-12" class="anchor" href="#parameters-12"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-12" class="anchor" href="#return-value-12"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: Always <code>TRUE</code>.</p>

<h5>
<a name="user-content-example-10" class="anchor" href="#example-10"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;flushAll();
</code></pre>

<h3>
<a name="user-content-flushdb" class="anchor" href="#flushdb"><span class="octicon octicon-link"></span></a>flushDB</h3>

<hr><p><em><strong>Description</strong></em>: Remove all keys from the current database.</p>

<h5>
<a name="user-content-parameters-13" class="anchor" href="#parameters-13"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-13" class="anchor" href="#return-value-13"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: Always <code>TRUE</code>.</p>

<h5>
<a name="user-content-example-11" class="anchor" href="#example-11"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;flushDB();
</code></pre>

<h3>
<a name="user-content-info" class="anchor" href="#info"><span class="octicon octicon-link"></span></a>info</h3>

<hr><p><em><strong>Description</strong></em>: Get information and statistics about the server</p>

<p>Returns an associative array that provides information about the server. Passing no arguments to
INFO will call the standard REDIS INFO command, which returns information such as the following:</p>

<ul class="task-list">
<li>redis_version</li>
<li>arch_bits</li>
<li>uptime_in_seconds</li>
<li>uptime_in_days</li>
<li>connected_clients</li>
<li>connected_slaves</li>
<li>used_memory</li>
<li>changes_since_last_save</li>
<li>bgsave_in_progress</li>
<li>last_save_time</li>
<li>total_connections_received</li>
<li>total_commands_processed</li>
<li>role</li>
</ul><p>You can pass a variety of options to INFO (<a href="http://redis.io/commands/info">per the Redis documentation</a>),
which will modify what is returned.</p>

<h5>
<a name="user-content-parameters-14" class="anchor" href="#parameters-14"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>option</em>: The option to provide redis (e.g. "COMMANDSTATS", "CPU")</p>

<h5>
<a name="user-content-example-12" class="anchor" href="#example-12"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;info(); /* standard redis INFO command */
$redis-&gt;info("COMMANDSTATS"); /* Information on the commands that have been run (&gt;=2.6 only)
$redis-&gt;info("CPU"); /* just CPU information from Redis INFO */
</code></pre>

<h3>
<a name="user-content-lastsave" class="anchor" href="#lastsave"><span class="octicon octicon-link"></span></a>lastSave</h3>

<hr><p><em><strong>Description</strong></em>: Returns the timestamp of the last disk save.</p>

<h5>
<a name="user-content-parameters-15" class="anchor" href="#parameters-15"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-14" class="anchor" href="#return-value-14"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INT</em>: timestamp.</p>

<h5>
<a name="user-content-example-13" class="anchor" href="#example-13"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;lastSave();
</code></pre>

<h3>
<a name="user-content-resetstat" class="anchor" href="#resetstat"><span class="octicon octicon-link"></span></a>resetStat</h3>

<hr><p><em><strong>Description</strong></em>: Reset the stats returned by <a href="#info">info</a> method.</p>

<p>These are the counters that are reset:</p>

<ul class="task-list">
<li>Keyspace hits</li>
<li>Keyspace misses</li>
<li>Number of commands processed</li>
<li>Number of connections received</li>
<li>Number of expired keys</li>
</ul><h5>
<a name="user-content-parameters-16" class="anchor" href="#parameters-16"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-15" class="anchor" href="#return-value-15"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-14" class="anchor" href="#example-14"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;resetStat();
</code></pre>

<h3>
<a name="user-content-save" class="anchor" href="#save"><span class="octicon octicon-link"></span></a>save</h3>

<hr><p><em><strong>Description</strong></em>: Synchronously save the dataset to disk (wait to complete)</p>

<h5>
<a name="user-content-parameters-17" class="anchor" href="#parameters-17"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-16" class="anchor" href="#return-value-16"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure. If a save is already running, this command will fail and return <code>FALSE</code>.</p>

<h5>
<a name="user-content-example-15" class="anchor" href="#example-15"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;save();
</code></pre>

<h3>
<a name="user-content-slaveof" class="anchor" href="#slaveof"><span class="octicon octicon-link"></span></a>slaveof</h3>

<hr><p><em><strong>Description</strong></em>: Changes the slave status</p>

<h5>
<a name="user-content-parameters-18" class="anchor" href="#parameters-18"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>Either host (string) and port (int), or no parameter to stop being a slave.</p>

<h5>
<a name="user-content-return-value-17" class="anchor" href="#return-value-17"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-16" class="anchor" href="#example-16"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;slaveof('10.0.1.7', 6379);
/* ... */
$redis-&gt;slaveof();
</code></pre>

<h3>
<a name="user-content-time" class="anchor" href="#time"><span class="octicon octicon-link"></span></a>time</h3>

<hr><p><em><strong>Description</strong></em>: Return the current server time.</p>

<h5>
<a name="user-content-parameters-19" class="anchor" href="#parameters-19"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>(none)  </p>

<h5>
<a name="user-content-return-value-18" class="anchor" href="#return-value-18"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>If successfull, the time will come back as an associative array with element zero being
the unix timestamp, and element one being microseconds.</p>

<h5>
<a name="user-content-examples-1" class="anchor" href="#examples-1"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;time();
</code></pre>

<h3>
<a name="user-content-slowlog" class="anchor" href="#slowlog"><span class="octicon octicon-link"></span></a>slowlog</h3>

<hr><p><em><strong>Description</strong></em>: Access the Redis slowlog</p>

<h5>
<a name="user-content-parameters-20" class="anchor" href="#parameters-20"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Operation</em> (string): This can be either <code>GET</code>, <code>LEN</code>, or <code>RESET</code> 
<em>Length</em> (integer), optional: If executing a <code>SLOWLOG GET</code> command, you can pass an optional length.</p>

<h5>
<a name="user-content-return-value-19" class="anchor" href="#return-value-19"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>The return value of SLOWLOG will depend on which operation was performed.
SLOWLOG GET: Array of slowlog entries, as provided by Redis
SLOGLOG LEN: Integer, the length of the slowlog
SLOWLOG RESET: Boolean, depending on success</p>

<h5>
<a name="user-content-examples-2" class="anchor" href="#examples-2"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>// Get ten slowlog entries
$redis-&gt;slowlog('get', 10); 
// Get the default number of slowlog entries

$redis-&gt;slowlog('get');
// Reset our slowlog
$redis-&gt;slowlog('reset');

// Retrieve slowlog length
$redis-&gt;slowlog('len');
</code></pre>

<h2>
<a name="user-content-keys-and-strings" class="anchor" href="#keys-and-strings"><span class="octicon octicon-link"></span></a>Keys and Strings</h2>

<h3>
<a name="user-content-strings" class="anchor" href="#strings"><span class="octicon octicon-link"></span></a>Strings</h3>

<hr><ul class="task-list">
<li>
<a href="#append">append</a> - Append a value to a key</li>
<li>
<a href="#bitcount">bitcount</a> - Count set bits in a string</li>
<li>
<a href="#bitop">bitop</a> - Perform bitwise operations between strings</li>
<li>
<a href="#decr-decrby">decr, decrBy</a> - Decrement the value of a key</li>
<li>
<a href="#get">get</a> - Get the value of a key</li>
<li>
<a href="#getbit">getBit</a> - Returns the bit value at offset in the string value stored at key</li>
<li>
<a href="#getrange">getRange</a> - Get a substring of the string stored at a key</li>
<li>
<a href="#getset">getSet</a> - Set the string value of a key and return its old value</li>
<li>
<a href="#incr-incrby">incr, incrBy</a> - Increment the value of a key</li>
<li>
<a href="#incrbyfloat">incrByFloat</a> - Increment the float value of a key by the given amount</li>
<li>
<a href="#mget-getmultiple">mGet, getMultiple</a> - Get the values of all the given keys</li>
<li>
<a href="#mset-msetnx">mSet, mSetNX</a> - Set multiple keys to multiple values</li>
<li>
<a href="#set">set</a> - Set the string value of a key</li>
<li>
<a href="#setbit">setBit</a> - Sets or clears the bit at offset in the string value stored at key</li>
<li>
<a href="#setex-psetex">setex, psetex</a> - Set the value and expiration of a key</li>
<li>
<a href="#setnx">setnx</a> - Set the value of a key, only if the key does not exist</li>
<li>
<a href="#setrange">setRange</a> - Overwrite part of a string at key starting at the specified offset</li>
<li>
<a href="#strlen">strlen</a> - Get the length of the value stored in a key</li>
</ul><h3>
<a name="user-content-keys" class="anchor" href="#keys"><span class="octicon octicon-link"></span></a>Keys</h3>

<hr><ul class="task-list">
<li>
<a href="#del-delete">del, delete</a> - Delete a key</li>
<li>
<a href="#dump">dump</a> - Return a serialized version of the value stored at the specified key.</li>
<li>
<a href="#exists">exists</a> - Determine if a key exists</li>
<li>
<a href="#expire-settimeout-pexpire">expire, setTimeout, pexpire</a> - Set a key's time to live in seconds</li>
<li>
<a href="#expireat-pexpireat">expireAt, pexpireAt</a> - Set the expiration for a key as a UNIX timestamp</li>
<li>
<a href="#keys-getkeys">keys, getKeys</a> - Find all keys matching the given pattern</li>
<li>
<a href="#scan">scan</a> - Scan for keys in the keyspace (Redis &gt;= 2.8.0)</li>
<li>
<a href="#migrate">migrate</a> - Atomically transfer a key from a Redis instance to another one</li>
<li>
<a href="#move">move</a> - Move a key to another database</li>
<li>
<a href="#object">object</a> - Inspect the internals of Redis objects</li>
<li>
<a href="#persist">persist</a> - Remove the expiration from a key</li>
<li>
<a href="#randomkey">randomKey</a> - Return a random key from the keyspace</li>
<li>
<a href="#rename-renamekey">rename, renameKey</a> - Rename a key</li>
<li>
<a href="#renamenx">renameNx</a> - Rename a key, only if the new key does not exist</li>
<li>
<a href="#type">type</a> - Determine the type stored at key</li>
<li>
<a href="#sort">sort</a> - Sort the elements in a list, set or sorted set</li>
<li>
<a href="#ttl-pttl">ttl, pttl</a> - Get the time to live for a key</li>
<li>
<a href="#restore">restore</a> - Create a key using the provided serialized value, previously obtained with <a href="#dump">dump</a>.</li>
</ul><hr><h3>
<a name="user-content-get" class="anchor" href="#get"><span class="octicon octicon-link"></span></a>get</h3>

<hr><p><em><strong>Description</strong></em>: Get the value related to the specified key</p>

<h5>
<a name="user-content-parameters-21" class="anchor" href="#parameters-21"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-20" class="anchor" href="#return-value-20"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>String</em> or <em>Bool</em>: If key didn't exist, <code>FALSE</code> is returned. Otherwise, the value related to this key is returned.</p>

<h5>
<a name="user-content-examples-3" class="anchor" href="#examples-3"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;get('key');
</code></pre>

<h3>
<a name="user-content-set" class="anchor" href="#set"><span class="octicon octicon-link"></span></a>set</h3>

<hr><p><em><strong>Description</strong></em>: Set the string value in 
argument as value of the key.  If you're using Redis &gt;= 2.6.12, you 
can pass extended options as explained below</p>

<h5>
<a name="user-content-parameters-22" class="anchor" href="#parameters-22"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em><br><em>Value</em><br><em>Timeout or Options Array</em> 
(optional). If you pass an integer, phpredis will redirect to SETEX, and
 will try to use Redis &gt;= 2.6.12 extended options if you pass an 
array with valid values</p>

<h5>
<a name="user-content-return-value-21" class="anchor" href="#return-value-21"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Bool</em> <code>TRUE</code> if the command is successful.</p>

<h5>
<a name="user-content-examples-4" class="anchor" href="#examples-4"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>// Simple key -&gt; value set
$redis-&gt;set('key', 'value');

// Will redirect, and actually make an SETEX call
$redis-&gt;set('key','value', 10);

// Will set the key, if it doesn't exist, with a ttl of 10 seconds
$redis-&gt;set('key', 'value', Array('nx', 'ex'=&gt;10));

// Will set a key, if it does exist, with a ttl of 1000 miliseconds
$redis-&gt;set('key', 'value', Array('xx', 'px'=&gt;1000));

</code></pre>

<h3>
<a name="user-content-setex-psetex" class="anchor" href="#setex-psetex"><span class="octicon octicon-link"></span></a>setex, psetex</h3>

<hr><p><em><strong>Description</strong></em>: Set the string value in argument as value of the key, with a time to live. PSETEX uses a TTL in milliseconds.</p>

<h5>
<a name="user-content-parameters-23" class="anchor" href="#parameters-23"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>
<em>TTL</em>
<em>Value</em></p>

<h5>
<a name="user-content-return-value-22" class="anchor" href="#return-value-22"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Bool</em> <code>TRUE</code> if the command is successful.</p>

<h5>
<a name="user-content-examples-5" class="anchor" href="#examples-5"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;setex('key', 3600, 'value'); // sets key â value, with 1h TTL.
$redis-&gt;psetex('key', 100, 'value'); // sets key â value, with 0.1 sec TTL.
</code></pre>

<h3>
<a name="user-content-setnx" class="anchor" href="#setnx"><span class="octicon octicon-link"></span></a>setnx</h3>

<hr><p><em><strong>Description</strong></em>: Set the string value in argument as value of the key if the key doesn't already exist in the database.</p>

<h5>
<a name="user-content-parameters-24" class="anchor" href="#parameters-24"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>value</em></p>

<h5>
<a name="user-content-return-value-23" class="anchor" href="#return-value-23"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Bool</em> <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-examples-6" class="anchor" href="#examples-6"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;setnx('key', 'value'); /* return TRUE */
$redis-&gt;setnx('key', 'value'); /* return FALSE */
</code></pre>

<h3>
<a name="user-content-del-delete" class="anchor" href="#del-delete"><span class="octicon octicon-link"></span></a>del, delete</h3>

<hr><p><em><strong>Description</strong></em>: Remove specified keys.</p>

<h5>
<a name="user-content-parameters-25" class="anchor" href="#parameters-25"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>An array of keys, or an undefined number of parameters, each a key: <em>key1</em> <em>key2</em> <em>key3</em> ... <em>keyN</em></p>

<h5>
<a name="user-content-return-value-24" class="anchor" href="#return-value-24"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Long</em> Number of keys deleted.</p>

<h5>
<a name="user-content-examples-7" class="anchor" href="#examples-7"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('key1', 'val1');
$redis-&gt;set('key2', 'val2');
$redis-&gt;set('key3', 'val3');
$redis-&gt;set('key4', 'val4');

$redis-&gt;delete('key1', 'key2'); /* return 2 */
$redis-&gt;delete(array('key3', 'key4')); /* return 2 */
</code></pre>

<h3>
<a name="user-content-exists" class="anchor" href="#exists"><span class="octicon octicon-link"></span></a>exists</h3>

<hr><p><em><strong>Description</strong></em>: Verify if the specified key exists.</p>

<h5>
<a name="user-content-parameters-26" class="anchor" href="#parameters-26"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-25" class="anchor" href="#return-value-25"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: If the key exists, return <code>TRUE</code>, otherwise return <code>FALSE</code>.</p>

<h5>
<a name="user-content-examples-8" class="anchor" href="#examples-8"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('key', 'value');
$redis-&gt;exists('key'); /*  TRUE */
$redis-&gt;exists('NonExistingKey'); /* FALSE */
</code></pre>

<h3>
<a name="user-content-incr-incrby" class="anchor" href="#incr-incrby"><span class="octicon octicon-link"></span></a>incr, incrBy</h3>

<hr><p><em><strong>Description</strong></em>: Increment the number 
stored at key by one. If the second argument is filled, it will be used 
as the integer value of the increment.</p>

<h5>
<a name="user-content-parameters-27" class="anchor" href="#parameters-27"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em>: value that will be added to key (only for incrBy)</p>

<h5>
<a name="user-content-return-value-26" class="anchor" href="#return-value-26"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INT</em> the new value</p>

<h5>
<a name="user-content-examples-9" class="anchor" href="#examples-9"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;incr('key1'); /* key1 didn't exists, set to 0 before the increment */
                      /* and now has the value 1  */

$redis-&gt;incr('key1'); /* 2 */
$redis-&gt;incr('key1'); /* 3 */
$redis-&gt;incr('key1'); /* 4 */
$redis-&gt;incrBy('key1', 10); /* 14 */
</code></pre>

<h3>
<a name="user-content-incrbyfloat" class="anchor" href="#incrbyfloat"><span class="octicon octicon-link"></span></a>incrByFloat</h3>

<hr><p><em><strong>Description</strong></em>: Increment the key with floating point precision.</p>

<h5>
<a name="user-content-parameters-28" class="anchor" href="#parameters-28"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em>: (float) value that will be added to the key  </p>

<h5>
<a name="user-content-return-value-27" class="anchor" href="#return-value-27"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>FLOAT</em> the new value</p>

<h5>
<a name="user-content-examples-10" class="anchor" href="#examples-10"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;incrByFloat('key1', 1.5); /* key1 didn't exist, so it will now be 1.5 */


$redis-&gt;incrByFloat('key1', 1.5); /* 3 */
$redis-&gt;incrByFloat('key1', -1.5); /* 1.5 */
$redis-&gt;incrByFloat('key1', 2.5); /* 4 */
</code></pre>

<h3>
<a name="user-content-decr-decrby" class="anchor" href="#decr-decrby"><span class="octicon octicon-link"></span></a>decr, decrBy</h3>

<hr><p><em><strong>Description</strong></em>: Decrement the number 
stored at key by one. If the second argument is filled, it will be used 
as the integer value of the decrement.</p>

<h5>
<a name="user-content-parameters-29" class="anchor" href="#parameters-29"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em>: value that will be substracted to key (only for decrBy)</p>

<h5>
<a name="user-content-return-value-28" class="anchor" href="#return-value-28"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INT</em> the new value</p>

<h5>
<a name="user-content-examples-11" class="anchor" href="#examples-11"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;decr('key1'); /* key1 didn't exists, set to 0 before the increment */
                      /* and now has the value -1  */

$redis-&gt;decr('key1'); /* -2 */
$redis-&gt;decr('key1'); /* -3 */
$redis-&gt;decrBy('key1', 10); /* -13 */
</code></pre>

<h3>
<a name="user-content-mget-getmultiple" class="anchor" href="#mget-getmultiple"><span class="octicon octicon-link"></span></a>mGet, getMultiple</h3>

<hr><p><em><strong>Description</strong></em>: Get the values of all the specified keys. If one or more keys dont exist, the array will contain <code>FALSE</code> at the position of the key.</p>

<h5>
<a name="user-content-parameters-30" class="anchor" href="#parameters-30"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Array</em>: Array containing the list of the keys</p>

<h5>
<a name="user-content-return-value-29" class="anchor" href="#return-value-29"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em>: Array containing the values related to keys in argument</p>

<h5>
<a name="user-content-examples-12" class="anchor" href="#examples-12"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('key1', 'value1');
$redis-&gt;set('key2', 'value2');
$redis-&gt;set('key3', 'value3');
$redis-&gt;mGet(array('key1', 'key2', 'key3')); /* array('value1', 'value2', 'value3');
$redis-&gt;mGet(array('key0', 'key1', 'key5')); /* array(`FALSE`, 'value2', `FALSE`);
</code></pre>

<h3>
<a name="user-content-getset" class="anchor" href="#getset"><span class="octicon octicon-link"></span></a>getSet</h3>

<hr><p><em><strong>Description</strong></em>: Sets a value and returns the previous entry at that key.</p>

<h5>
<a name="user-content-parameters-31" class="anchor" href="#parameters-31"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<p><em>STRING</em>: value</p>

<h5>
<a name="user-content-return-value-30" class="anchor" href="#return-value-30"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>A string, the previous value located at this key.</p>

<h5>
<a name="user-content-example-17" class="anchor" href="#example-17"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('x', '42');
$exValue = $redis-&gt;getSet('x', 'lol');  // return '42', replaces x by 'lol'
$newValue = $redis-&gt;get('x')'       // return 'lol'
</code></pre>

<h3>
<a name="user-content-randomkey" class="anchor" href="#randomkey"><span class="octicon octicon-link"></span></a>randomKey</h3>

<hr><p><em><strong>Description</strong></em>: Returns a random key.</p>

<h5>
<a name="user-content-parameters-32" class="anchor" href="#parameters-32"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>None.</p>

<h5>
<a name="user-content-return-value-31" class="anchor" href="#return-value-31"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em>: an existing key in redis.</p>

<h5>
<a name="user-content-example-18" class="anchor" href="#example-18"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$key = $redis-&gt;randomKey();
$surprise = $redis-&gt;get($key);  // who knows what's in there.
</code></pre>

<h3>
<a name="user-content-move" class="anchor" href="#move"><span class="octicon octicon-link"></span></a>move</h3>

<hr><p><em><strong>Description</strong></em>: Moves a key to a different database.</p>

<h5>
<a name="user-content-parameters-33" class="anchor" href="#parameters-33"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key, the key to move.</p>

<p><em>INTEGER</em>: dbindex, the database number to move the key to.</p>

<h5>
<a name="user-content-return-value-32" class="anchor" href="#return-value-32"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-19" class="anchor" href="#example-19"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;select(0);  // switch to DB 0
$redis-&gt;set('x', '42'); // write 42 to x
$redis-&gt;move('x', 1);   // move to DB 1
$redis-&gt;select(1);  // switch to DB 1
$redis-&gt;get('x');   // will return 42
</code></pre>

<h3>
<a name="user-content-rename-renamekey" class="anchor" href="#rename-renamekey"><span class="octicon octicon-link"></span></a>rename, renameKey</h3>

<hr><p><em><strong>Description</strong></em>: Renames a key.</p>

<h5>
<a name="user-content-parameters-34" class="anchor" href="#parameters-34"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>STRING</em>: srckey, the key to rename.</p>

<p><em>STRING</em>: dstkey, the new name for the key.</p>

<h5>
<a name="user-content-return-value-33" class="anchor" href="#return-value-33"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-20" class="anchor" href="#example-20"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('x', '42');
$redis-&gt;rename('x', 'y');
$redis-&gt;get('y');   // â 42
$redis-&gt;get('x');   // â `FALSE`
</code></pre>

<h3>
<a name="user-content-renamenx" class="anchor" href="#renamenx"><span class="octicon octicon-link"></span></a>renameNx</h3>

<hr><p><em><strong>Description</strong></em>: Same as rename, but will not replace a key if the destination already exists. This is the same behaviour as setNx.</p>

<h3>
<a name="user-content-expire-settimeout-pexpire" class="anchor" href="#expire-settimeout-pexpire"><span class="octicon octicon-link"></span></a>expire, setTimeout, pexpire</h3>

<hr><p><em><strong>Description</strong></em>: Sets an expiration date (a timeout) on an item. pexpire requires a TTL in milliseconds.</p>

<h5>
<a name="user-content-parameters-35" class="anchor" href="#parameters-35"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key. The key that will disappear.</p>

<p><em>Integer</em>: ttl. The key's remaining Time To Live, in seconds.</p>

<h5>
<a name="user-content-return-value-34" class="anchor" href="#return-value-34"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-21" class="anchor" href="#example-21"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('x', '42');
$redis-&gt;setTimeout('x', 3); // x will disappear in 3 seconds.
sleep(5);               // wait 5 seconds
$redis-&gt;get('x');       // will return `FALSE`, as 'x' has expired.
</code></pre>

<h3>
<a name="user-content-expireat-pexpireat" class="anchor" href="#expireat-pexpireat"><span class="octicon octicon-link"></span></a>expireAt, pexpireAt</h3>

<hr><p><em><strong>Description</strong></em>: Sets an expiration date (a timestamp) on an item. pexpireAt requires a timestamp in milliseconds.</p>

<h5>
<a name="user-content-parameters-36" class="anchor" href="#parameters-36"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key. The key that will disappear.</p>

<p><em>Integer</em>: Unix timestamp. The key's date of death, in seconds from Epoch time.</p>

<h5>
<a name="user-content-return-value-35" class="anchor" href="#return-value-35"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-22" class="anchor" href="#example-22"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('x', '42');
$now = time(NULL); // current timestamp
$redis-&gt;expireAt('x', $now + 3);    // x will disappear in 3 seconds.
sleep(5);               // wait 5 seconds
$redis-&gt;get('x');       // will return `FALSE`, as 'x' has expired.
</code></pre>

<h3>
<a name="user-content-keys-getkeys" class="anchor" href="#keys-getkeys"><span class="octicon octicon-link"></span></a>keys, getKeys</h3>

<hr><p><em><strong>Description</strong></em>: Returns the keys that match a certain pattern.</p>

<h5>
<a name="user-content-parameters-37" class="anchor" href="#parameters-37"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>STRING</em>: pattern, using '*' as a wildcard.</p>

<h5>
<a name="user-content-return-value-36" class="anchor" href="#return-value-36"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array of STRING</em>: The keys that match a certain pattern.</p>

<h5>
<a name="user-content-example-23" class="anchor" href="#example-23"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$allKeys = $redis-&gt;keys('*');   // all keys will match this.
$keyWithUserPrefix = $redis-&gt;keys('user*');
</code></pre>

<h3>
<a name="user-content-scan" class="anchor" href="#scan"><span class="octicon octicon-link"></span></a>scan</h3>

<hr><p><em><strong>Description</strong></em>:  Scan the keyspace for keys</p>

<h5>
<a name="user-content-parameters-38" class="anchor" href="#parameters-38"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>LONG (reference)</em>:  Iterator, initialized to NULL
<em>STRING, Optional</em>:  Pattern to match
<em>LONG, Optional</em>: Count of keys per iteration (only a suggestion to Redis)</p>

<h5>
<a name="user-content-return-value-37" class="anchor" href="#return-value-37"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array, boolean</em>:  This function will return an array of keys or FALSE if there are no more keys</p>

<h5>
<a name="user-content-example-24" class="anchor" href="#example-24"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$it = NULL; /* Initialize our iterator to NULL */
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY); /* retry when we get no keys back */
while($arr_keys = $redis-&gt;scan($it)) {
    foreach($arr_keys as $str_key) {
        echo "Here is a key: $str_key\n";
    }
    echo "No more keys to scan!\n";
}
</code></pre>

<h3>
<a name="user-content-object" class="anchor" href="#object"><span class="octicon octicon-link"></span></a>object</h3>

<hr><p><em><strong>Description</strong></em>: Describes the object pointed to by a key.</p>

<h5>
<a name="user-content-parameters-39" class="anchor" href="#parameters-39"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>The information to retrieve (string) and the key (string). Info can be one of the following:</p>

<ul class="task-list">
<li>"encoding"</li>
<li>"refcount"</li>
<li>"idletime"</li>
</ul><h5>
<a name="user-content-return-value-38" class="anchor" href="#return-value-38"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> for "encoding", <em>LONG</em> for "refcount" and "idletime", <code>FALSE</code> if the key doesn't exist.</p>

<h5>
<a name="user-content-example-25" class="anchor" href="#example-25"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;object("encoding", "l"); // â ziplist
$redis-&gt;object("refcount", "l"); // â 1
$redis-&gt;object("idletime", "l"); // â 400 (in seconds, with a precision of 10 seconds).
</code></pre>

<h3>
<a name="user-content-type" class="anchor" href="#type"><span class="octicon octicon-link"></span></a>type</h3>

<hr><p><em><strong>Description</strong></em>: Returns the type of data pointed by a given key.</p>

<h5>
<a name="user-content-parameters-40" class="anchor" href="#parameters-40"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-39" class="anchor" href="#return-value-39"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>Depending on the type of the data pointed by the key, this method will return the following value:<br>
string: Redis::REDIS_STRING<br>
set: Redis::REDIS_SET<br>
list: Redis::REDIS_LIST<br>
zset: Redis::REDIS_ZSET<br>
hash: Redis::REDIS_HASH<br>
other: Redis::REDIS_NOT_FOUND  </p>

<h5>
<a name="user-content-example-26" class="anchor" href="#example-26"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;type('key');
</code></pre>

<h3>
<a name="user-content-append" class="anchor" href="#append"><span class="octicon octicon-link"></span></a>append</h3>

<hr><p><em><strong>Description</strong></em>: Append specified string to the string stored in specified key.</p>

<h5>
<a name="user-content-parameters-41" class="anchor" href="#parameters-41"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>
<em>Value</em></p>

<h5>
<a name="user-content-return-value-40" class="anchor" href="#return-value-40"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em>: Size of the value after the append</p>

<h5>
<a name="user-content-example-27" class="anchor" href="#example-27"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', 'value1');
$redis-&gt;append('key', 'value2'); /* 12 */
$redis-&gt;get('key'); /* 'value1value2' */
</code></pre>

<h3>
<a name="user-content-getrange" class="anchor" href="#getrange"><span class="octicon octicon-link"></span></a>getRange</h3>

<hr><p><em><strong>Description</strong></em>: Return a substring of a larger string </p>

<p><em>Note</em>: substr also supported but deprecated in redis.</p>

<h5>
<a name="user-content-parameters-42" class="anchor" href="#parameters-42"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>start</em>
<em>end</em></p>

<h5>
<a name="user-content-return-value-41" class="anchor" href="#return-value-41"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em>: the substring </p>

<h5>
<a name="user-content-example-28" class="anchor" href="#example-28"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', 'string value');
$redis-&gt;getRange('key', 0, 5); /* 'string' */
$redis-&gt;getRange('key', -5, -1); /* 'value' */
</code></pre>

<h3>
<a name="user-content-setrange" class="anchor" href="#setrange"><span class="octicon octicon-link"></span></a>setRange</h3>

<hr><p><em><strong>Description</strong></em>: Changes a substring of a larger string.</p>

<h5>
<a name="user-content-parameters-43" class="anchor" href="#parameters-43"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>offset</em><br><em>value</em>  </p>

<h5>
<a name="user-content-return-value-42" class="anchor" href="#return-value-42"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em>: the length of the string after it was modified.</p>

<h5>
<a name="user-content-example-29" class="anchor" href="#example-29"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', 'Hello world');
$redis-&gt;setRange('key', 6, "redis"); /* returns 11 */
$redis-&gt;get('key'); /* "Hello redis" */
</code></pre>

<h3>
<a name="user-content-strlen" class="anchor" href="#strlen"><span class="octicon octicon-link"></span></a>strlen</h3>

<hr><p><em><strong>Description</strong></em>: Get the length of a string value.</p>

<h5>
<a name="user-content-parameters-44" class="anchor" href="#parameters-44"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-43" class="anchor" href="#return-value-43"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em></p>

<h5>
<a name="user-content-example-30" class="anchor" href="#example-30"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', 'value');
$redis-&gt;strlen('key'); /* 5 */
</code></pre>

<h3>
<a name="user-content-getbit" class="anchor" href="#getbit"><span class="octicon octicon-link"></span></a>getBit</h3>

<hr><p><em><strong>Description</strong></em>: Return a single bit out of a larger string</p>

<h5>
<a name="user-content-parameters-45" class="anchor" href="#parameters-45"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>offset</em>  </p>

<h5>
<a name="user-content-return-value-44" class="anchor" href="#return-value-44"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em>: the bit value (0 or 1)</p>

<h5>
<a name="user-content-example-31" class="anchor" href="#example-31"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', "\x7f"); // this is 0111 1111
$redis-&gt;getBit('key', 0); /* 0 */
$redis-&gt;getBit('key', 1); /* 1 */
</code></pre>

<h3>
<a name="user-content-setbit" class="anchor" href="#setbit"><span class="octicon octicon-link"></span></a>setBit</h3>

<hr><p><em><strong>Description</strong></em>: Changes a single bit of a string.</p>

<h5>
<a name="user-content-parameters-46" class="anchor" href="#parameters-46"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>offset</em><br><em>value</em>: bool or int (1 or 0)  </p>

<h5>
<a name="user-content-return-value-45" class="anchor" href="#return-value-45"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em>: 0 or 1, the value of the bit before it was set.</p>

<h5>
<a name="user-content-example-32" class="anchor" href="#example-32"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;set('key', "*");    // ord("*") = 42 = 0x2f = "0010 1010"
$redis-&gt;setBit('key', 5, 1); /* returns 0 */
$redis-&gt;setBit('key', 7, 1); /* returns 0 */
$redis-&gt;get('key'); /* chr(0x2f) = "/" = b("0010 1111") */
</code></pre>

<h3>
<a name="user-content-bitop" class="anchor" href="#bitop"><span class="octicon octicon-link"></span></a>bitop</h3>

<hr><p><em><strong>Description</strong></em>: Bitwise operation on multiple keys.</p>

<h5>
<a name="user-content-parameters-47" class="anchor" href="#parameters-47"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>operation</em>: either "AND", "OR", "NOT", "XOR"<br><em>ret_key</em>: return key<br><em>key1</em><br><em>key2...</em>  </p>

<h5>
<a name="user-content-return-value-46" class="anchor" href="#return-value-46"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em>: The size of the string stored in the destination key.</p>

<h3>
<a name="user-content-bitcount" class="anchor" href="#bitcount"><span class="octicon octicon-link"></span></a>bitcount</h3>

<hr><p><em><strong>Description</strong></em>: Count bits in a string.</p>

<h5>
<a name="user-content-parameters-48" class="anchor" href="#parameters-48"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>  </p>

<h5>
<a name="user-content-return-value-47" class="anchor" href="#return-value-47"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em>: The number of bits set to 1 in the value behind the input key.</p>

<h3>
<a name="user-content-sort" class="anchor" href="#sort"><span class="octicon octicon-link"></span></a>sort</h3>

<hr><p><em><strong>Description</strong></em>: Sort the elements in a list, set or sorted set.</p>

<h5>
<a name="user-content-parameters-49" class="anchor" href="#parameters-49"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key
<em>Options</em>: array(key =&gt; value, ...) - optional, with the following keys and values:</p>

<pre><code>    'by' =&gt; 'some_pattern_*',
    'limit' =&gt; array(0, 1),
    'get' =&gt; 'some_other_pattern_*' or an array of patterns,
    'sort' =&gt; 'asc' or 'desc',
    'alpha' =&gt; TRUE,
    'store' =&gt; 'external-key'
</code></pre>

<h5>
<a name="user-content-return-value-48" class="anchor" href="#return-value-48"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>An array of values, or a number corresponding to the number of elements stored if that was used.</p>

<h5>
<a name="user-content-example-33" class="anchor" href="#example-33"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s');
$redis-&gt;sadd('s', 5);
$redis-&gt;sadd('s', 4);
$redis-&gt;sadd('s', 2);
$redis-&gt;sadd('s', 1);
$redis-&gt;sadd('s', 3);

var_dump($redis-&gt;sort('s')); // 1,2,3,4,5
var_dump($redis-&gt;sort('s', array('sort' =&gt; 'desc'))); // 5,4,3,2,1
var_dump($redis-&gt;sort('s', array('sort' =&gt; 'desc', 'store' =&gt; 'out'))); // (int)5
</code></pre>

<h3>
<a name="user-content-ttl-pttl" class="anchor" href="#ttl-pttl"><span class="octicon octicon-link"></span></a>ttl, pttl</h3>

<hr><p><em><strong>Description</strong></em>: Returns the time to live left for a given key in seconds (ttl), or milliseconds (pttl).</p>

<h5>
<a name="user-content-parameters-50" class="anchor" href="#parameters-50"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-49" class="anchor" href="#return-value-49"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em>:  The time to live in seconds.  If the key has no ttl, <code>-1</code> will be returned, and <code>-2</code> if the key doesn't exist.</p>

<h5>
<a name="user-content-example-34" class="anchor" href="#example-34"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;ttl('key');
</code></pre>

<h3>
<a name="user-content-persist" class="anchor" href="#persist"><span class="octicon octicon-link"></span></a>persist</h3>

<hr><p><em><strong>Description</strong></em>: Remove the expiration timer from a key.</p>

<h5>
<a name="user-content-parameters-51" class="anchor" href="#parameters-51"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-50" class="anchor" href="#return-value-50"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: <code>TRUE</code> if a timeout was removed, <code>FALSE</code> if the key didnât exist or didnât have an expiration timer.</p>

<h5>
<a name="user-content-example-35" class="anchor" href="#example-35"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;persist('key');
</code></pre>

<h3>
<a name="user-content-mset-msetnx" class="anchor" href="#mset-msetnx"><span class="octicon octicon-link"></span></a>mset, msetnx</h3>

<hr><p><em><strong>Description</strong></em>: Sets multiple key-value pairs in one atomic command. MSETNX only returns TRUE if all the keys were set (see SETNX).</p>

<h5>
<a name="user-content-parameters-52" class="anchor" href="#parameters-52"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Pairs</em>: array(key =&gt; value, ...)</p>

<h5>
<a name="user-content-return-value-51" class="anchor" href="#return-value-51"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Bool</em> <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-36" class="anchor" href="#example-36"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>
$redis-&gt;mset(array('key0' =&gt; 'value0', 'key1' =&gt; 'value1'));
var_dump($redis-&gt;get('key0'));
var_dump($redis-&gt;get('key1'));

</code></pre>

<p>Output:</p>

<pre><code>string(6) "value0"
string(6) "value1"
</code></pre>

<h3>
<a name="user-content-dump" class="anchor" href="#dump"><span class="octicon octicon-link"></span></a>dump</h3>

<hr><p><em><strong>Description</strong></em>: Dump a key out of a redis database, the value of which can later be passed into redis using the RESTORE command.  The data
that comes out of DUMP is a binary representation of the key as Redis stores it.</p>

<h5>
<a name="user-content-parameters-53" class="anchor" href="#parameters-53"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em> string  </p>

<h5>
<a name="user-content-return-value-52" class="anchor" href="#return-value-52"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>The Redis encoded value of the key, or FALSE if the key doesn't exist</p>

<h5>
<a name="user-content-examples-13" class="anchor" href="#examples-13"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('foo', 'bar');
$val = $redis-&gt;dump('foo'); // $val will be the Redis encoded key value
</code></pre>

<h3>
<a name="user-content-restore" class="anchor" href="#restore"><span class="octicon octicon-link"></span></a>restore</h3>

<hr><p><em><strong>Description</strong></em>: Restore a key from the result of a DUMP operation.</p>

<h5>
<a name="user-content-parameters-54" class="anchor" href="#parameters-54"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em> string.  The key name<br><em>ttl</em> integer.  How long the key should live (if zero, no expire will be set on the key)<br><em>value</em> string (binary).  The Redis encoded key value (from DUMP)  </p>

<h5>
<a name="user-content-examples-14" class="anchor" href="#examples-14"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('foo', 'bar');
$val = $redis-&gt;dump('foo');
$redis-&gt;restore('bar', 0, $val); // The key 'bar', will now be equal to the key 'foo'
</code></pre>

<h3>
<a name="user-content-migrate" class="anchor" href="#migrate"><span class="octicon octicon-link"></span></a>migrate</h3>

<hr><p><em><strong>Description</strong></em>: Migrates a key to a different Redis instance.</p>

<h5>
<a name="user-content-parameters-55" class="anchor" href="#parameters-55"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>host</em> string.  The destination host<br><em>port</em> integer.  The TCP port to connect to.<br><em>key</em> string. The key to migrate.<br><em>destination-db</em> integer.  The target DB.<br><em>timeout</em> integer.  The maximum amount of time given to this transfer. 
<em>copy</em> boolean, optional.  Should we send the COPY flag to redis
<em>replace</em> boolean, optional.  Should we send the REPLACE flag to redis </p>

<h5>
<a name="user-content-examples-15" class="anchor" href="#examples-15"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;migrate('backup', 6379, 'foo', 0, 3600);
$redis-&gt;migrate('backup', 6379, 'foo', 0, 3600, true, true); /* copy and replace */
$redis-&gt;migrate('backup', 6379, 'foo', 0, 3600, false, true); /* just REPLACE flag */
</code></pre>

<h2>
<a name="user-content-hashes" class="anchor" href="#hashes"><span class="octicon octicon-link"></span></a>Hashes</h2>

<ul class="task-list">
<li>
<a href="#hdel">hDel</a> - Delete one or more hash fields</li>
<li>
<a href="#hexists">hExists</a> - Determine if a hash field exists</li>
<li>
<a href="#hget">hGet</a> - Get the value of a hash field</li>
<li>
<a href="#hgetall">hGetAll</a> - Get all the fields and values in a hash</li>
<li>
<a href="#hincrby">hIncrBy</a> - Increment the integer value of a hash field by the given number</li>
<li>
<a href="#hincrbyfloat">hIncrByFloat</a> - Increment the float value of a hash field by the given amount</li>
<li>
<a href="#hkeys">hKeys</a> - Get all the fields in a hash</li>
<li>
<a href="#hlen">hLen</a> - Get the number of fields in a hash</li>
<li>
<a href="#hmget">hMGet</a> - Get the values of all the given hash fields</li>
<li>
<a href="#hmset">hMSet</a> - Set multiple hash fields to multiple values</li>
<li>
<a href="#hset">hSet</a> - Set the string value of a hash field</li>
<li>
<a href="#hsetnx">hSetNx</a> - Set the value of a hash field, only if the field does not exist</li>
<li>
<a href="#hvals">hVals</a> - Get all the values in a hash</li>
<li>
<a href="#hscan">hScan</a> - Scan a hash key for members</li>
</ul><h3>
<a name="user-content-hset" class="anchor" href="#hset"><span class="octicon octicon-link"></span></a>hSet</h3>

<hr><p><em><strong>Description</strong></em>: Adds a value to the hash stored at key. If this value is already in the hash, <code>FALSE</code> is returned.  </p>

<h5>
<a name="user-content-parameters-56" class="anchor" href="#parameters-56"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>hashKey</em><br><em>value</em>  </p>

<h5>
<a name="user-content-return-value-53" class="anchor" href="#return-value-53"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> <code>1</code> if value didn't exist and was added successfully, <code>0</code> if the value was already present and was replaced, <code>FALSE</code> if there was an error.</p>

<h5>
<a name="user-content-example-37" class="anchor" href="#example-37"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h')
$redis-&gt;hSet('h', 'key1', 'hello'); /* 1, 'key1' =&gt; 'hello' in the hash at "h" */
$redis-&gt;hGet('h', 'key1'); /* returns "hello" */

$redis-&gt;hSet('h', 'key1', 'plop'); /* 0, value was replaced. */
$redis-&gt;hGet('h', 'key1'); /* returns "plop" */
</code></pre>

<h3>
<a name="user-content-hsetnx" class="anchor" href="#hsetnx"><span class="octicon octicon-link"></span></a>hSetNx</h3>

<hr><p><em><strong>Description</strong></em>: Adds a value to the hash stored at key only if this field isn't already in the hash.</p>

<h5>
<a name="user-content-return-value-54" class="anchor" href="#return-value-54"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> <code>TRUE</code> if the field was set, <code>FALSE</code> if it was already present.</p>

<h5>
<a name="user-content-example-38" class="anchor" href="#example-38"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h')
$redis-&gt;hSetNx('h', 'key1', 'hello'); /* TRUE, 'key1' =&gt; 'hello' in the hash at "h" */
$redis-&gt;hSetNx('h', 'key1', 'world'); /* FALSE, 'key1' =&gt; 'hello' in the hash at "h". No change since the field wasn't replaced. */
</code></pre>

<h3>
<a name="user-content-hget" class="anchor" href="#hget"><span class="octicon octicon-link"></span></a>hGet</h3>

<hr><p><em><strong>Description</strong></em>: Gets a value from the hash stored at key. If the hash table doesn't exist, or the key doesn't exist, <code>FALSE</code> is returned.  </p>

<h5>
<a name="user-content-parameters-57" class="anchor" href="#parameters-57"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>hashKey</em>  </p>

<h5>
<a name="user-content-return-value-55" class="anchor" href="#return-value-55"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> The value, if the command executed successfully
<em>BOOL</em> <code>FALSE</code> in case of failure</p>

<h3>
<a name="user-content-hlen" class="anchor" href="#hlen"><span class="octicon octicon-link"></span></a>hLen</h3>

<hr><p><em><strong>Description</strong></em>: Returns the length of a hash, in number of items</p>

<h5>
<a name="user-content-parameters-58" class="anchor" href="#parameters-58"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-56" class="anchor" href="#return-value-56"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the number of items in a hash, <code>FALSE</code> if the key doesn't exist or isn't a hash.</p>

<h5>
<a name="user-content-example-39" class="anchor" href="#example-39"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h')
$redis-&gt;hSet('h', 'key1', 'hello');
$redis-&gt;hSet('h', 'key2', 'plop');
$redis-&gt;hLen('h'); /* returns 2 */
</code></pre>

<h3>
<a name="user-content-hdel" class="anchor" href="#hdel"><span class="octicon octicon-link"></span></a>hDel</h3>

<hr><p><em><strong>Description</strong></em>: Removes a value from the hash stored at key. If the hash table doesn't exist, or the key doesn't exist, <code>FALSE</code> is returned.  </p>

<h5>
<a name="user-content-parameters-59" class="anchor" href="#parameters-59"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>hashKey</em>  </p>

<h5>
<a name="user-content-return-value-57" class="anchor" href="#return-value-57"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> <code>TRUE</code> in case of success, <code>FALSE</code> in case of failure</p>

<h3>
<a name="user-content-hkeys" class="anchor" href="#hkeys"><span class="octicon octicon-link"></span></a>hKeys</h3>

<hr><p><em><strong>Description</strong></em>: Returns the keys in a hash, as an array of strings.</p>

<h5>
<a name="user-content-parameters-60" class="anchor" href="#parameters-60"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-58" class="anchor" href="#return-value-58"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>An array of elements, the keys of the hash. This works like PHP's array_keys().</p>

<h5>
<a name="user-content-example-40" class="anchor" href="#example-40"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hSet('h', 'a', 'x');
$redis-&gt;hSet('h', 'b', 'y');
$redis-&gt;hSet('h', 'c', 'z');
$redis-&gt;hSet('h', 'd', 't');
var_dump($redis-&gt;hKeys('h'));
</code></pre>

<p>Output:</p>

<pre><code>array(4) {
  [0]=&gt;
  string(1) "a"
  [1]=&gt;
  string(1) "b"
  [2]=&gt;
  string(1) "c"
  [3]=&gt;
  string(1) "d"
}
</code></pre>

<p>The order is random and corresponds to redis' own internal representation of the set structure.</p>

<h3>
<a name="user-content-hvals" class="anchor" href="#hvals"><span class="octicon octicon-link"></span></a>hVals</h3>

<hr><p><em><strong>Description</strong></em>: Returns the values in a hash, as an array of strings.</p>

<h5>
<a name="user-content-parameters-61" class="anchor" href="#parameters-61"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-59" class="anchor" href="#return-value-59"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>An array of elements, the values of the hash. This works like PHP's array_values().</p>

<h5>
<a name="user-content-example-41" class="anchor" href="#example-41"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hSet('h', 'a', 'x');
$redis-&gt;hSet('h', 'b', 'y');
$redis-&gt;hSet('h', 'c', 'z');
$redis-&gt;hSet('h', 'd', 't');
var_dump($redis-&gt;hVals('h'));
</code></pre>

<p>Output:</p>

<pre><code>array(4) {
  [0]=&gt;
  string(1) "x"
  [1]=&gt;
  string(1) "y"
  [2]=&gt;
  string(1) "z"
  [3]=&gt;
  string(1) "t"
}
</code></pre>

<p>The order is random and corresponds to redis' own internal representation of the set structure.</p>

<h3>
<a name="user-content-hgetall" class="anchor" href="#hgetall"><span class="octicon octicon-link"></span></a>hGetAll</h3>

<hr><p><em><strong>Description</strong></em>: Returns the whole hash, as an array of strings indexed by strings.</p>

<h5>
<a name="user-content-parameters-62" class="anchor" href="#parameters-62"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-60" class="anchor" href="#return-value-60"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>An array of elements, the contents of the hash.</p>

<h5>
<a name="user-content-example-42" class="anchor" href="#example-42"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hSet('h', 'a', 'x');
$redis-&gt;hSet('h', 'b', 'y');
$redis-&gt;hSet('h', 'c', 'z');
$redis-&gt;hSet('h', 'd', 't');
var_dump($redis-&gt;hGetAll('h'));
</code></pre>

<p>Output:</p>

<pre><code>array(4) {
  ["a"]=&gt;
  string(1) "x"
  ["b"]=&gt;
  string(1) "y"
  ["c"]=&gt;
  string(1) "z"
  ["d"]=&gt;
  string(1) "t"
}
</code></pre>

<p>The order is random and corresponds to redis' own internal representation of the set structure.</p>

<h3>
<a name="user-content-hexists" class="anchor" href="#hexists"><span class="octicon octicon-link"></span></a>hExists</h3>

<hr><p><em><strong>Description</strong></em>: Verify if the specified member exists in a key.</p>

<h5>
<a name="user-content-parameters-63" class="anchor" href="#parameters-63"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>memberKey</em></p>

<h5>
<a name="user-content-return-value-61" class="anchor" href="#return-value-61"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>: If the member exists in the hash table, return <code>TRUE</code>, otherwise return <code>FALSE</code>.</p>

<h5>
<a name="user-content-examples-16" class="anchor" href="#examples-16"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;hSet('h', 'a', 'x');
$redis-&gt;hExists('h', 'a'); /*  TRUE */
$redis-&gt;hExists('h', 'NonExistingKey'); /* FALSE */
</code></pre>

<h3>
<a name="user-content-hincrby" class="anchor" href="#hincrby"><span class="octicon octicon-link"></span></a>hIncrBy</h3>

<hr><p><em><strong>Description</strong></em>: Increments the value of a member from a hash by a given amount.</p>

<h5>
<a name="user-content-parameters-64" class="anchor" href="#parameters-64"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>member</em><br><em>value</em>: (integer) value that will be added to the member's value  </p>

<h5>
<a name="user-content-return-value-62" class="anchor" href="#return-value-62"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the new value</p>

<h5>
<a name="user-content-examples-17" class="anchor" href="#examples-17"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hIncrBy('h', 'x', 2); /* returns 2: h[x] = 2 now. */
$redis-&gt;hIncrBy('h', 'x', 1); /* h[x] â 2 + 1. Returns 3 */
</code></pre>

<h3>
<a name="user-content-hincrbyfloat" class="anchor" href="#hincrbyfloat"><span class="octicon octicon-link"></span></a>hIncrByFloat</h3>

<hr><p><em><strong>Description</strong></em>: Increments the value of a hash member by the provided float value</p>

<h5>
<a name="user-content-parameters-65" class="anchor" href="#parameters-65"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>member</em><br><em>value</em>: (float) value that will be added to the member's value  </p>

<h5>
<a name="user-content-return-value-63" class="anchor" href="#return-value-63"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>FLOAT</em> the new value</p>

<h5>
<a name="user-content-examples-18" class="anchor" href="#examples-18"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hIncrByFloat('h','x', 1.5); /* returns 1.5: h[x] = 1.5 now */
$redis-&gt;hIncrByFLoat('h', 'x', 1.5); /* returns 3.0: h[x] = 3.0 now */
$redis-&gt;hIncrByFloat('h', 'x', -3.0); /* returns 0.0: h[x] = 0.0 now */
</code></pre>

<h3>
<a name="user-content-hmset" class="anchor" href="#hmset"><span class="octicon octicon-link"></span></a>hMSet</h3>

<hr><p><em><strong>Description</strong></em>: Fills in a whole hash. Non-string values are converted to string, using the standard <code>(string)</code> cast. NULL values are stored as empty strings.</p>

<h5>
<a name="user-content-parameters-66" class="anchor" href="#parameters-66"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>members</em>: key â value array  </p>

<h5>
<a name="user-content-return-value-64" class="anchor" href="#return-value-64"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em>  </p>

<h5>
<a name="user-content-examples-19" class="anchor" href="#examples-19"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('user:1');
$redis-&gt;hMset('user:1', array('name' =&gt; 'Joe', 'salary' =&gt; 2000));
$redis-&gt;hIncrBy('user:1', 'salary', 100); // Joe earns 100 more now.
</code></pre>

<h3>
<a name="user-content-hmget" class="anchor" href="#hmget"><span class="octicon octicon-link"></span></a>hMGet</h3>

<hr><p><em><strong>Description</strong></em>: Retrieve the values associated to the specified fields in the hash.</p>

<h5>
<a name="user-content-parameters-67" class="anchor" href="#parameters-67"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>memberKeys</em> Array  </p>

<h5>
<a name="user-content-return-value-65" class="anchor" href="#return-value-65"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> An array of elements, the values of the specified fields in the hash, with the hash keys as array keys.</p>

<h5>
<a name="user-content-examples-20" class="anchor" href="#examples-20"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('h');
$redis-&gt;hSet('h', 'field1', 'value1');
$redis-&gt;hSet('h', 'field2', 'value2');
$redis-&gt;hmGet('h', array('field1', 'field2')); /* returns array('field1' =&gt; 'value1', 'field2' =&gt; 'value2') */
</code></pre>

<h3>
<a name="user-content-hscan" class="anchor" href="#hscan"><span class="octicon octicon-link"></span></a>hScan</h3>

<hr><p><em><strong>Description</strong></em>:  Scan a HASH value for members, with an optional pattern and count</p>

<h5>
<a name="user-content-parameters-68" class="anchor" href="#parameters-68"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>: String
<em>iterator</em>: Long (reference)
<em>pattern</em>: Optional pattern to match against
<em>count</em>: How many keys to return in a go (only a sugestion to Redis)</p>

<h5>
<a name="user-content-return-value-66" class="anchor" href="#return-value-66"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> An array of members that match our pattern</p>

<h5>
<a name="user-content-examples-21" class="anchor" href="#examples-21"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$it = NULL;
/* Don't ever return an empty array until we're done iterating */
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY);
while($arr_keys = $redis-&gt;hscan('hash', $it)) {
    foreach($arr_keys as $str_field =&gt; $str_value) {
        echo "$str_field =&gt; $str_value\n"; /* Print the hash member and value */
    }
}
</code></pre>

<h2>
<a name="user-content-lists" class="anchor" href="#lists"><span class="octicon octicon-link"></span></a>Lists</h2>

<ul class="task-list">
<li>
<a href="#blpop-brpop">blPop, brPop</a> - Remove and get the first/last element in a list</li>
<li>
<a href="#brpoplpush">brpoplpush</a> - Pop a value from a list, push it to another list and return it</li>
<li>
<a href="#lindex-lget">lIndex, lGet</a> - Get an element from a list by its index</li>
<li>
<a href="#linsert">lInsert</a> - Insert an element before or after another element in a list</li>
<li>
<a href="#llen-lsize">lLen, lSize</a> - Get the length/size of a list</li>
<li>
<a href="#lpop">lPop</a> - Remove and get the first element in a list</li>
<li>
<a href="#lpush">lPush</a> - Prepend one or multiple values to a list</li>
<li>
<a href="#lpushx">lPushx</a> - Prepend a value to a list, only if the list exists</li>
<li>
<a href="#lrange-lgetrange">lRange, lGetRange</a> - Get a range of elements from a list</li>
<li>
<a href="#lrem-lremove">lRem, lRemove</a> - Remove elements from a list</li>
<li>
<a href="#lset">lSet</a> - Set the value of an element in a list by its index</li>
<li>
<a href="#ltrim-listtrim">lTrim, listTrim</a> - Trim a list to the specified range</li>
<li>
<a href="#rpop">rPop</a> - Remove and get the last element in a list</li>
<li>
<a href="#rpoplpush">rpoplpush</a> - Remove the last element in a list, append it to another list and return it (redis &gt;= 1.1)</li>
<li>
<a href="#rpush">rPush</a> - Append one or multiple values to a list</li>
<li>
<a href="#rpushx">rPushx</a> - Append a value to a list, only if the list exists</li>
</ul><h3>
<a name="user-content-blpop-brpop" class="anchor" href="#blpop-brpop"><span class="octicon octicon-link"></span></a>blPop, brPop</h3>

<hr><p><em><strong>Description</strong></em>: Is a blocking lPop(rPop) 
primitive. If at least one of the lists contains at least one element, 
the element will be popped from the head of the list and returned to the
 caller.
Il all the list identified by the keys passed in arguments are empty, 
blPop will block during the specified timeout until an element is pushed
 to one of those lists. This element will be popped.</p>

<h5>
<a name="user-content-parameters-69" class="anchor" href="#parameters-69"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>ARRAY</em> Array containing the keys of the lists
<em>INTEGER</em> Timeout
Or
<em>STRING</em> Key1
<em>STRING</em> Key2
<em>STRING</em> Key3
...
<em>STRING</em> Keyn
<em>INTEGER</em> Timeout</p>

<h5>
<a name="user-content-return-value-67" class="anchor" href="#return-value-67"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>ARRAY</em> array('listName', 'element')</p>

<h5>
<a name="user-content-example-43" class="anchor" href="#example-43"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>/* Non blocking feature */
$redis-&gt;lPush('key1', 'A');
$redis-&gt;delete('key2');

$redis-&gt;blPop('key1', 'key2', 10); /* array('key1', 'A') */
/* OR */
$redis-&gt;blPop(array('key1', 'key2'), 10); /* array('key1', 'A') */

$redis-&gt;brPop('key1', 'key2', 10); /* array('key1', 'A') */
/* OR */
$redis-&gt;brPop(array('key1', 'key2'), 10); /* array('key1', 'A') */

/* Blocking feature */

/* process 1 */
$redis-&gt;delete('key1');
$redis-&gt;blPop('key1', 10);
/* blocking for 10 seconds */

/* process 2 */
$redis-&gt;lPush('key1', 'A');

/* process 1 */
/* array('key1', 'A') is returned*/
</code></pre>

<h3>
<a name="user-content-brpoplpush" class="anchor" href="#brpoplpush"><span class="octicon octicon-link"></span></a>brpoplpush</h3>

<hr><p><em><strong>Description</strong></em>: A blocking version of <code>rpoplpush</code>, with an integral timeout in the third parameter.</p>

<h5>
<a name="user-content-parameters-70" class="anchor" href="#parameters-70"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: srckey<br><em>Key</em>: dstkey<br><em>Long</em>: timeout</p>

<h5>
<a name="user-content-return-value-68" class="anchor" href="#return-value-68"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> The element that was moved in case of success, <code>FALSE</code> in case of timeout.</p>

<h3>
<a name="user-content-lindex-lget" class="anchor" href="#lindex-lget"><span class="octicon octicon-link"></span></a>lIndex, lGet</h3>

<hr><p><em><strong>Description</strong></em>: Return the specified element of the list stored at the specified key.</p>

<p>0 the first element, 1 the second ...
-1 the last element, -2 the penultimate ...</p>

<p>Return <code>FALSE</code> in case of a bad index or a key that doesn't point to a list.</p>

<h5>
<a name="user-content-parameters-71" class="anchor" href="#parameters-71"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>index</em></p>

<h5>
<a name="user-content-return-value-69" class="anchor" href="#return-value-69"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>String</em> the element at this index<br><em>Bool</em> <code>FALSE</code> if the key identifies a non-string data type, or no value corresponds to this index in the list <code>Key</code>.</p>

<h5>
<a name="user-content-example-44" class="anchor" href="#example-44"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C'); /* key1 =&gt; [ 'A', 'B', 'C' ] */
$redis-&gt;lGet('key1', 0); /* 'A' */
$redis-&gt;lGet('key1', -1); /* 'C' */
$redis-&gt;lGet('key1', 10); /* `FALSE` */
</code></pre>

<h3>
<a name="user-content-linsert" class="anchor" href="#linsert"><span class="octicon octicon-link"></span></a>lInsert</h3>

<hr><p><em><strong>Description</strong></em>: Insert value in the list before or after the pivot value.</p>

<p>The parameter options specify the position of the insert (before or after).
If the list didn't exists, or the pivot didn't exists, the value is not inserted.</p>

<h5>
<a name="user-content-parameters-72" class="anchor" href="#parameters-72"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>position</em>  Redis::BEFORE | Redis::AFTER
<em>pivot</em>
<em>value</em></p>

<h5>
<a name="user-content-return-value-70" class="anchor" href="#return-value-70"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>The number of the elements in the list, -1 if the pivot didn't exists.</p>

<h5>
<a name="user-content-example-45" class="anchor" href="#example-45"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('key1');
$redis-&gt;lInsert('key1', Redis::AFTER, 'A', 'X'); /* 0 */

$redis-&gt;lPush('key1', 'A');
$redis-&gt;lPush('key1', 'B');
$redis-&gt;lPush('key1', 'C');

$redis-&gt;lInsert('key1', Redis::BEFORE, 'C', 'X'); /* 4 */
$redis-&gt;lRange('key1', 0, -1); /* array('A', 'B', 'X', 'C') */

$redis-&gt;lInsert('key1', Redis::AFTER, 'C', 'Y'); /* 5 */
$redis-&gt;lRange('key1', 0, -1); /* array('A', 'B', 'X', 'C', 'Y') */

$redis-&gt;lInsert('key1', Redis::AFTER, 'W', 'value'); /* -1 */
</code></pre>

<h3>
<a name="user-content-lpop" class="anchor" href="#lpop"><span class="octicon octicon-link"></span></a>lPop</h3>

<hr><p><em><strong>Description</strong></em>: Return and remove the first element of the list.</p>

<h5>
<a name="user-content-parameters-73" class="anchor" href="#parameters-73"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-71" class="anchor" href="#return-value-71"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> if command executed successfully
<em>BOOL</em> <code>FALSE</code> in case of failure (empty list)</p>

<h5>
<a name="user-content-example-46" class="anchor" href="#example-46"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C'); /* key1 =&gt; [ 'A', 'B', 'C' ] */
$redis-&gt;lPop('key1'); /* key1 =&gt; [ 'B', 'C' ] */
</code></pre>

<h3>
<a name="user-content-lpush" class="anchor" href="#lpush"><span class="octicon octicon-link"></span></a>lPush</h3>

<hr><p><em><strong>Description</strong></em>: Adds the string value to 
the head (left) of the list. Creates the list if the key didn't exist. 
If the key exists and is not a list, <code>FALSE</code> is returned.</p>

<h5>
<a name="user-content-parameters-74" class="anchor" href="#parameters-74"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em> String, value to push in key</p>

<h5>
<a name="user-content-return-value-72" class="anchor" href="#return-value-72"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The new length of the list in case of success, <code>FALSE</code> in case of Failure.</p>

<h5>
<a name="user-content-examples-22" class="anchor" href="#examples-22"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('key1');
$redis-&gt;lPush('key1', 'C'); // returns 1
$redis-&gt;lPush('key1', 'B'); // returns 2
$redis-&gt;lPush('key1', 'A'); // returns 3
/* key1 now points to the following list: [ 'A', 'B', 'C' ] */
</code></pre>

<h3>
<a name="user-content-lpushx" class="anchor" href="#lpushx"><span class="octicon octicon-link"></span></a>lPushx</h3>

<hr><p><em><strong>Description</strong></em>: Adds the string value to the head (left) of the list if the list exists.</p>

<h5>
<a name="user-content-parameters-75" class="anchor" href="#parameters-75"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em> String, value to push in key</p>

<h5>
<a name="user-content-return-value-73" class="anchor" href="#return-value-73"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The new length of the list in case of success, <code>FALSE</code> in case of Failure.</p>

<h5>
<a name="user-content-examples-23" class="anchor" href="#examples-23"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('key1');
$redis-&gt;lPushx('key1', 'A'); // returns 0
$redis-&gt;lPush('key1', 'A'); // returns 1
$redis-&gt;lPushx('key1', 'B'); // returns 2
$redis-&gt;lPushx('key1', 'C'); // returns 3
/* key1 now points to the following list: [ 'A', 'B', 'C' ] */
</code></pre>

<h3>
<a name="user-content-lrange-lgetrange" class="anchor" href="#lrange-lgetrange"><span class="octicon octicon-link"></span></a>lRange, lGetRange</h3>

<hr><p><em><strong>Description</strong></em>: Returns the specified 
elements of the list stored at the specified key in the range [start, 
end]. start and stop are interpretated as indices:
0 the first element, 1 the second ...
-1 the last element, -2 the penultimate ...</p>

<h5>
<a name="user-content-parameters-76" class="anchor" href="#parameters-76"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>start</em>
<em>end</em></p>

<h5>
<a name="user-content-return-value-74" class="anchor" href="#return-value-74"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> containing the values in specified range. </p>

<h5>
<a name="user-content-example-47" class="anchor" href="#example-47"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C');
$redis-&gt;lRange('key1', 0, -1); /* array('A', 'B', 'C') */
</code></pre>

<h3>
<a name="user-content-lrem-lremove" class="anchor" href="#lrem-lremove"><span class="octicon octicon-link"></span></a>lRem, lRemove</h3>

<hr><p><em><strong>Description</strong></em>: Removes the first <code>count</code>
 occurences of the value element from the list. If count is zero, all 
the matching elements are removed. If count is negative, elements are 
removed from tail to head.</p>

<p><strong>Note</strong>: The argument order is not the same as in the Redis documentation. This difference is kept for compatibility reasons.</p>

<h5>
<a name="user-content-parameters-77" class="anchor" href="#parameters-77"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em><br><em>count</em>  </p>

<h5>
<a name="user-content-return-value-75" class="anchor" href="#return-value-75"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the number of elements to remove<br><em>BOOL</em> <code>FALSE</code> if the value identified by key is not a list.</p>

<h5>
<a name="user-content-example-48" class="anchor" href="#example-48"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;lPush('key1', 'A');
$redis-&gt;lPush('key1', 'B');
$redis-&gt;lPush('key1', 'C'); 
$redis-&gt;lPush('key1', 'A'); 
$redis-&gt;lPush('key1', 'A'); 

$redis-&gt;lRange('key1', 0, -1); /* array('A', 'A', 'C', 'B', 'A') */
$redis-&gt;lRem('key1', 'A', 2); /* 2 */
$redis-&gt;lRange('key1', 0, -1); /* array('C', 'B', 'A') */
</code></pre>

<h3>
<a name="user-content-lset" class="anchor" href="#lset"><span class="octicon octicon-link"></span></a>lSet</h3>

<hr><p><em><strong>Description</strong></em>: Set the list at index with the new value.</p>

<h5>
<a name="user-content-parameters-78" class="anchor" href="#parameters-78"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>index</em>
<em>value</em></p>

<h5>
<a name="user-content-return-value-76" class="anchor" href="#return-value-76"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> <code>TRUE</code> if the new value is setted. <code>FALSE</code> if the index is out of range, or data type identified by key is not a list.</p>

<h5>
<a name="user-content-example-49" class="anchor" href="#example-49"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C'); /* key1 =&gt; [ 'A', 'B', 'C' ] */
$redis-&gt;lGet('key1', 0); /* 'A' */
$redis-&gt;lSet('key1', 0, 'X');
$redis-&gt;lGet('key1', 0); /* 'X' */ 
</code></pre>

<h3>
<a name="user-content-ltrim-listtrim" class="anchor" href="#ltrim-listtrim"><span class="octicon octicon-link"></span></a>lTrim, listTrim</h3>

<hr><p><em><strong>Description</strong></em>: Trims an existing list so that it will contain only a specified range of elements.</p>

<h5>
<a name="user-content-parameters-79" class="anchor" href="#parameters-79"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>start</em>
<em>stop</em></p>

<h5>
<a name="user-content-return-value-77" class="anchor" href="#return-value-77"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em><br><em>Bool</em> return <code>FALSE</code> if the key identify a non-list value.</p>

<h5>
<a name="user-content-example-50" class="anchor" href="#example-50"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C');
$redis-&gt;lRange('key1', 0, -1); /* array('A', 'B', 'C') */
$redis-&gt;lTrim('key1', 0, 1);
$redis-&gt;lRange('key1', 0, -1); /* array('A', 'B') */
</code></pre>

<h3>
<a name="user-content-rpop" class="anchor" href="#rpop"><span class="octicon octicon-link"></span></a>rPop</h3>

<hr><p><em><strong>Description</strong></em>: Returns and removes the last element of the list.</p>

<h5>
<a name="user-content-parameters-80" class="anchor" href="#parameters-80"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-78" class="anchor" href="#return-value-78"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> if command executed successfully
<em>BOOL</em> <code>FALSE</code> in case of failure (empty list)</p>

<h5>
<a name="user-content-example-51" class="anchor" href="#example-51"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C'); /* key1 =&gt; [ 'A', 'B', 'C' ] */
$redis-&gt;rPop('key1'); /* key1 =&gt; [ 'A', 'B' ] */
</code></pre>

<h3>
<a name="user-content-rpoplpush" class="anchor" href="#rpoplpush"><span class="octicon octicon-link"></span></a>rpoplpush</h3>

<hr><p><em><strong>Description</strong></em>: Pops a value from the tail of a list, and pushes it to the front of another list. Also return this value. (redis &gt;= 1.1)</p>

<h5>
<a name="user-content-parameters-81" class="anchor" href="#parameters-81"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: srckey<br><em>Key</em>: dstkey</p>

<h5>
<a name="user-content-return-value-79" class="anchor" href="#return-value-79"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>STRING</em> The element that was moved in case of success, <code>FALSE</code> in case of failure.</p>

<h5>
<a name="user-content-example-52" class="anchor" href="#example-52"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('x', 'y');

$redis-&gt;lPush('x', 'abc');
$redis-&gt;lPush('x', 'def');
$redis-&gt;lPush('y', '123');
$redis-&gt;lPush('y', '456');

// move the last of x to the front of y.
var_dump($redis-&gt;rpoplpush('x', 'y'));
var_dump($redis-&gt;lRange('x', 0, -1));
var_dump($redis-&gt;lRange('y', 0, -1));

</code></pre>

<p>Output:</p>

<pre><code>string(3) "abc"
array(1) {
  [0]=&gt;
  string(3) "def"
}
array(3) {
  [0]=&gt;
  string(3) "abc"
  [1]=&gt;
  string(3) "456"
  [2]=&gt;
  string(3) "123"
}
</code></pre>

<h3>
<a name="user-content-rpush" class="anchor" href="#rpush"><span class="octicon octicon-link"></span></a>rPush</h3>

<hr><p><em><strong>Description</strong></em>: Adds the string value to 
the tail (right) of the list. Creates the list if the key didn't exist. 
If the key exists and is not a list, <code>FALSE</code> is returned.</p>

<h5>
<a name="user-content-parameters-82" class="anchor" href="#parameters-82"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em> String, value to push in key</p>

<h5>
<a name="user-content-return-value-80" class="anchor" href="#return-value-80"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The new length of the list in case of success, <code>FALSE</code> in case of Failure.</p>

<h5>
<a name="user-content-examples-24" class="anchor" href="#examples-24"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('key1');
$redis-&gt;rPush('key1', 'A'); // returns 1
$redis-&gt;rPush('key1', 'B'); // returns 2
$redis-&gt;rPush('key1', 'C'); // returns 3
/* key1 now points to the following list: [ 'A', 'B', 'C' ] */
</code></pre>

<h3>
<a name="user-content-rpushx" class="anchor" href="#rpushx"><span class="octicon octicon-link"></span></a>rPushx</h3>

<hr><p><em><strong>Description</strong></em>: Adds the string value to the tail (right) of the list if the ist exists. <code>FALSE</code> in case of Failure.</p>

<h5>
<a name="user-content-parameters-83" class="anchor" href="#parameters-83"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em> String, value to push in key</p>

<h5>
<a name="user-content-return-value-81" class="anchor" href="#return-value-81"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The new length of the list in case of success, <code>FALSE</code> in case of Failure.</p>

<h5>
<a name="user-content-examples-25" class="anchor" href="#examples-25"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('key1');
$redis-&gt;rPushx('key1', 'A'); // returns 0
$redis-&gt;rPush('key1', 'A'); // returns 1
$redis-&gt;rPushx('key1', 'B'); // returns 2
$redis-&gt;rPushx('key1', 'C'); // returns 3
/* key1 now points to the following list: [ 'A', 'B', 'C' ] */
</code></pre>

<h3>
<a name="user-content-llen-lsize" class="anchor" href="#llen-lsize"><span class="octicon octicon-link"></span></a>lLen, lSize</h3>

<hr><p><em><strong>Description</strong></em>: Returns the size of a list identified by Key.</p>

<p>If the list didn't exist or is empty, the command returns 0. If the 
data type identified by Key is not a list, the command return <code>FALSE</code>.</p>

<h5>
<a name="user-content-parameters-84" class="anchor" href="#parameters-84"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em></p>

<h5>
<a name="user-content-return-value-82" class="anchor" href="#return-value-82"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The size of the list identified by Key exists.<br><em>BOOL</em> <code>FALSE</code> if the data type identified by Key is not list</p>

<h5>
<a name="user-content-example-53" class="anchor" href="#example-53"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;rPush('key1', 'A');
$redis-&gt;rPush('key1', 'B');
$redis-&gt;rPush('key1', 'C'); /* key1 =&gt; [ 'A', 'B', 'C' ] */
$redis-&gt;lSize('key1');/* 3 */
$redis-&gt;rPop('key1'); 
$redis-&gt;lSize('key1');/* 2 */
</code></pre>

<h2>
<a name="user-content-sets" class="anchor" href="#sets"><span class="octicon octicon-link"></span></a>Sets</h2>

<ul class="task-list">
<li>
<a href="#sadd">sAdd</a> - Add one or more members to a set</li>
<li>
<a href="#scard-ssize">sCard, sSize</a> - Get the number of members in a set</li>
<li>
<a href="#sdiff">sDiff</a> - Subtract multiple sets</li>
<li>
<a href="#sdiffstore">sDiffStore</a> - Subtract multiple sets and store the resulting set in a key</li>
<li>
<a href="#sinter">sInter</a> - Intersect multiple sets</li>
<li>
<a href="#sinterstore">sInterStore</a> - Intersect multiple sets and store the resulting set in a key</li>
<li>
<a href="#sismember-scontains">sIsMember, sContains</a> - Determine if a given value is a member of a set</li>
<li>
<a href="#smembers-sgetmembers">sMembers, sGetMembers</a> - Get all the members in a set</li>
<li>
<a href="#smove">sMove</a> - Move a member from one set to another</li>
<li>
<a href="#spop">sPop</a> - Remove and return a random member from a set</li>
<li>
<a href="#srandmember">sRandMember</a> - Get one or multiple random members from a set</li>
<li>
<a href="#srem-sremove">sRem, sRemove</a> - Remove one or more members from a set</li>
<li>
<a href="#sunion">sUnion</a> - Add multiple sets</li>
<li>
<a href="#sunionstore">sUnionStore</a> - Add multiple sets and store the resulting set in a key</li>
<li>
<a href="#sscan">sScan</a> - Scan a set for members</li>
</ul><h3>
<a name="user-content-sadd" class="anchor" href="#sadd"><span class="octicon octicon-link"></span></a>sAdd</h3>

<hr><p><em><strong>Description</strong></em>: Adds a value to the set value stored at key. If this value is already in the set, <code>FALSE</code> is returned.  </p>

<h5>
<a name="user-content-parameters-85" class="anchor" href="#parameters-85"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>value</em></p>

<h5>
<a name="user-content-return-value-83" class="anchor" href="#return-value-83"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the number of elements added to the set.</p>

<h5>
<a name="user-content-example-54" class="anchor" href="#example-54"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1'); /* 1, 'key1' =&gt; {'member1'} */
$redis-&gt;sAdd('key1' , 'member2', 'member3'); /* 2, 'key1' =&gt; {'member1', 'member2', 'member3'}*/
$redis-&gt;sAdd('key1' , 'member2'); /* 0, 'key1' =&gt; {'member1', 'member2', 'member3'}*/
</code></pre>

<h3>
<a name="user-content-scard-ssize" class="anchor" href="#scard-ssize"><span class="octicon octicon-link"></span></a>sCard, sSize</h3>

<hr><p><em><strong>Description</strong></em>: Returns the cardinality of the set identified by key.</p>

<h5>
<a name="user-content-parameters-86" class="anchor" href="#parameters-86"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-84" class="anchor" href="#return-value-84"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the cardinality of the set identified by key, 0 if the set doesn't exist.</p>

<h5>
<a name="user-content-example-55" class="anchor" href="#example-55"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1');
$redis-&gt;sAdd('key1' , 'member2');
$redis-&gt;sAdd('key1' , 'member3'); /* 'key1' =&gt; {'member1', 'member2', 'member3'}*/
$redis-&gt;sCard('key1'); /* 3 */
$redis-&gt;sCard('keyX'); /* 0 */
</code></pre>

<h3>
<a name="user-content-sdiff" class="anchor" href="#sdiff"><span class="octicon octicon-link"></span></a>sDiff</h3>

<hr><p><em><strong>Description</strong></em>: Performs the difference between N sets and returns it.</p>

<h5>
<a name="user-content-parameters-87" class="anchor" href="#parameters-87"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Keys</em>: key1, key2, ... , keyN: Any number of keys corresponding to sets in redis.</p>

<h5>
<a name="user-content-return-value-85" class="anchor" href="#return-value-85"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array of strings</em>: The difference of the first set will all the others.</p>

<h5>
<a name="user-content-example-56" class="anchor" href="#example-56"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s0', 's1', 's2');

$redis-&gt;sAdd('s0', '1');
$redis-&gt;sAdd('s0', '2');
$redis-&gt;sAdd('s0', '3');
$redis-&gt;sAdd('s0', '4');

$redis-&gt;sAdd('s1', '1');
$redis-&gt;sAdd('s2', '3');

var_dump($redis-&gt;sDiff('s0', 's1', 's2'));
</code></pre>

<p>Return value: all elements of s0 that are neither in s1 nor in s2.</p>

<pre><code>array(2) {
  [0]=&gt;
  string(1) "4"
  [1]=&gt;
  string(1) "2"
}
</code></pre>

<h3>
<a name="user-content-sdiffstore" class="anchor" href="#sdiffstore"><span class="octicon octicon-link"></span></a>sDiffStore</h3>

<hr><p><em><strong>Description</strong></em>: Performs the same action as sDiff, but stores the result in the first key</p>

<h5>
<a name="user-content-parameters-88" class="anchor" href="#parameters-88"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: dstkey, the key to store the diff into.</p>

<p><em>Keys</em>: key1, key2, ... , keyN: Any number of keys corresponding to sets in redis</p>

<h5>
<a name="user-content-return-value-86" class="anchor" href="#return-value-86"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em>: The cardinality of the resulting set, or <code>FALSE</code> in case of a missing key.</p>

<h5>
<a name="user-content-example-57" class="anchor" href="#example-57"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s0', 's1', 's2');

$redis-&gt;sAdd('s0', '1');
$redis-&gt;sAdd('s0', '2');
$redis-&gt;sAdd('s0', '3');
$redis-&gt;sAdd('s0', '4');

$redis-&gt;sAdd('s1', '1');
$redis-&gt;sAdd('s2', '3');

var_dump($redis-&gt;sDiffStore('dst', 's0', 's1', 's2'));
var_dump($redis-&gt;sMembers('dst'));
</code></pre>

<p>Return value: the number of elements of s0 that are neither in s1 nor in s2.</p>

<pre><code>int(2)
array(2) {
  [0]=&gt;
  string(1) "4"
  [1]=&gt;
  string(1) "2"
}
</code></pre>

<h3>
<a name="user-content-sinter" class="anchor" href="#sinter"><span class="octicon octicon-link"></span></a>sInter</h3>

<hr><p><em><strong>Description</strong></em>: Returns the members of a set resulting from the intersection of all the sets held at the specified keys.</p>

<p>If just a single key is specified, then this command produces the members of this set. If one of the keys
is missing, <code>FALSE</code> is returned.</p>

<h5>
<a name="user-content-parameters-89" class="anchor" href="#parameters-89"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>key1, key2, keyN: keys identifying the different sets on which we will apply the intersection.</p>

<h5>
<a name="user-content-return-value-87" class="anchor" href="#return-value-87"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>Array, contain the result of the intersection between those keys. If 
the intersection beteen the different sets is empty, the return value 
will be empty array.</p>

<h5>
<a name="user-content-examples-26" class="anchor" href="#examples-26"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1', 'val1');
$redis-&gt;sAdd('key1', 'val2');
$redis-&gt;sAdd('key1', 'val3');
$redis-&gt;sAdd('key1', 'val4');

$redis-&gt;sAdd('key2', 'val3');
$redis-&gt;sAdd('key2', 'val4');

$redis-&gt;sAdd('key3', 'val3');
$redis-&gt;sAdd('key3', 'val4');

var_dump($redis-&gt;sInter('key1', 'key2', 'key3'));
</code></pre>

<p>Output:</p>

<pre><code>array(2) {
  [0]=&gt;
  string(4) "val4"
  [1]=&gt;
  string(4) "val3"
}
</code></pre>

<h3>
<a name="user-content-sinterstore" class="anchor" href="#sinterstore"><span class="octicon octicon-link"></span></a>sInterStore</h3>

<hr><p><em><strong>Description</strong></em>: Performs a sInter command and stores the result in a new set.</p>

<h5>
<a name="user-content-parameters-90" class="anchor" href="#parameters-90"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: dstkey, the key to store the diff into.</p>

<p><em>Keys</em>: key1, key2... keyN. key1..keyN are intersected as in sInter.</p>

<h5>
<a name="user-content-return-value-88" class="anchor" href="#return-value-88"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em>: The cardinality of the resulting set, or <code>FALSE</code> in case of a missing key.</p>

<h5>
<a name="user-content-example-58" class="anchor" href="#example-58"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1', 'val1');
$redis-&gt;sAdd('key1', 'val2');
$redis-&gt;sAdd('key1', 'val3');
$redis-&gt;sAdd('key1', 'val4');

$redis-&gt;sAdd('key2', 'val3');
$redis-&gt;sAdd('key2', 'val4');

$redis-&gt;sAdd('key3', 'val3');
$redis-&gt;sAdd('key3', 'val4');

var_dump($redis-&gt;sInterStore('output', 'key1', 'key2', 'key3'));
var_dump($redis-&gt;sMembers('output'));
</code></pre>

<p>Output:</p>

<pre><code>int(2)

array(2) {
  [0]=&gt;
  string(4) "val4"
  [1]=&gt;
  string(4) "val3"
}
</code></pre>

<h3>
<a name="user-content-sismember-scontains" class="anchor" href="#sismember-scontains"><span class="octicon octicon-link"></span></a>sIsMember, sContains</h3>

<hr><p><em><strong>Description</strong></em>: Checks if <code>value</code> is a member of the set stored at the key <code>key</code>.</p>

<h5>
<a name="user-content-parameters-91" class="anchor" href="#parameters-91"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>value</em></p>

<h5>
<a name="user-content-return-value-89" class="anchor" href="#return-value-89"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> <code>TRUE</code> if <code>value</code> is a member of the set at key <code>key</code>, <code>FALSE</code> otherwise.</p>

<h5>
<a name="user-content-example-59" class="anchor" href="#example-59"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1');
$redis-&gt;sAdd('key1' , 'member2');
$redis-&gt;sAdd('key1' , 'member3'); /* 'key1' =&gt; {'member1', 'member2', 'member3'}*/

$redis-&gt;sIsMember('key1', 'member1'); /* TRUE */
$redis-&gt;sIsMember('key1', 'memberX'); /* FALSE */
</code></pre>

<h3>
<a name="user-content-smembers-sgetmembers" class="anchor" href="#smembers-sgetmembers"><span class="octicon octicon-link"></span></a>sMembers, sGetMembers</h3>

<hr><p><em><strong>Description</strong></em>: Returns the contents of a set.</p>

<h5>
<a name="user-content-parameters-92" class="anchor" href="#parameters-92"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: key</p>

<h5>
<a name="user-content-return-value-90" class="anchor" href="#return-value-90"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>An array of elements, the contents of the set.</p>

<h5>
<a name="user-content-example-60" class="anchor" href="#example-60"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s');
$redis-&gt;sAdd('s', 'a');
$redis-&gt;sAdd('s', 'b');
$redis-&gt;sAdd('s', 'a');
$redis-&gt;sAdd('s', 'c');
var_dump($redis-&gt;sMembers('s'));
</code></pre>

<p>Output:</p>

<pre><code>array(3) {
  [0]=&gt;
  string(1) "c"
  [1]=&gt;
  string(1) "a"
  [2]=&gt;
  string(1) "b"
}
</code></pre>

<p>The order is random and corresponds to redis' own internal representation of the set structure.</p>

<h3>
<a name="user-content-smove" class="anchor" href="#smove"><span class="octicon octicon-link"></span></a>sMove</h3>

<hr><p><em><strong>Description</strong></em>: Moves the specified member from the set at srcKey to the set at dstKey.</p>

<h5>
<a name="user-content-parameters-93" class="anchor" href="#parameters-93"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>srcKey</em>
<em>dstKey</em>
<em>member</em></p>

<h5>
<a name="user-content-return-value-91" class="anchor" href="#return-value-91"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> If the operation is successful, return <code>TRUE</code>. If the srcKey and/or dstKey didn't exist, and/or the member didn't exist in srcKey, <code>FALSE</code> is returned.</p>

<h5>
<a name="user-content-example-61" class="anchor" href="#example-61"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member11');
$redis-&gt;sAdd('key1' , 'member12');
$redis-&gt;sAdd('key1' , 'member13'); /* 'key1' =&gt; {'member11', 'member12', 'member13'}*/
$redis-&gt;sAdd('key2' , 'member21');
$redis-&gt;sAdd('key2' , 'member22'); /* 'key2' =&gt; {'member21', 'member22'}*/
$redis-&gt;sMove('key1', 'key2', 'member13'); /* 'key1' =&gt;  {'member11', 'member12'} */
                    /* 'key2' =&gt;  {'member21', 'member22', 'member13'} */

</code></pre>

<h3>
<a name="user-content-spop" class="anchor" href="#spop"><span class="octicon octicon-link"></span></a>sPop</h3>

<hr><p><em><strong>Description</strong></em>: Removes and returns a random element from the set value at Key.</p>

<h5>
<a name="user-content-parameters-94" class="anchor" href="#parameters-94"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-92" class="anchor" href="#return-value-92"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>String</em> "popped" value<br><em>Bool</em> <code>FALSE</code> if set identified by key is empty or doesn't exist.</p>

<h5>
<a name="user-content-example-62" class="anchor" href="#example-62"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1');
$redis-&gt;sAdd('key1' , 'member2');
$redis-&gt;sAdd('key1' , 'member3'); /* 'key1' =&gt; {'member3', 'member1', 'member2'}*/
$redis-&gt;sPop('key1'); /* 'member1', 'key1' =&gt; {'member3', 'member2'} */
$redis-&gt;sPop('key1'); /* 'member3', 'key1' =&gt; {'member2'} */
</code></pre>

<h3>
<a name="user-content-srandmember" class="anchor" href="#srandmember"><span class="octicon octicon-link"></span></a>sRandMember</h3>

<hr><p><em><strong>Description</strong></em>: Returns a random element from the set value at Key, without removing it.</p>

<h5>
<a name="user-content-parameters-95" class="anchor" href="#parameters-95"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>count</em> (Integer, optional)  </p>

<h5>
<a name="user-content-return-value-93" class="anchor" href="#return-value-93"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>If no count is provided, a random <em>String</em> value from the set will be returned.  If a count
is provided, an array of values from the set will be returned.  Read about the different
ways to use the count here: <a href="http://redis.io/commands/srandmember">SRANDMEMBER</a><br><em>Bool</em> <code>FALSE</code> if set identified by key is empty or doesn't exist.</p>

<h5>
<a name="user-content-example-63" class="anchor" href="#example-63"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1');
$redis-&gt;sAdd('key1' , 'member2');
$redis-&gt;sAdd('key1' , 'member3'); /* 'key1' =&gt; {'member3', 'member1', 'member2'}*/

// No count
$redis-&gt;sRandMember('key1'); /* 'member1', 'key1' =&gt; {'member3', 'member1', 'member2'} */
$redis-&gt;sRandMember('key1'); /* 'member3', 'key1' =&gt; {'member3', 'member1', 'member2'} */

// With a count
$redis-&gt;sRandMember('key1', 3); // Will return an array with all members from the set
$redis-&gt;sRandMember('key1', 2); // Will an array with 2 members of the set
$redis-&gt;sRandMember('key1', -100); // Will return an array of 100 elements, picked from our set (with dups)
$redis-&gt;sRandMember('empty-set', 100); // Will return an empty array
$redis-&gt;sRandMember('not-a-set', 100); // Will return FALSE
</code></pre>

<h3>
<a name="user-content-srem-sremove" class="anchor" href="#srem-sremove"><span class="octicon octicon-link"></span></a>sRem, sRemove</h3>

<hr><p><em><strong>Description</strong></em>: Removes the specified member from the set value stored at key.</p>

<h5>
<a name="user-content-parameters-96" class="anchor" href="#parameters-96"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>
<em>member</em></p>

<h5>
<a name="user-content-return-value-94" class="anchor" href="#return-value-94"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The number of elements removed from the set.</p>

<h5>
<a name="user-content-example-64" class="anchor" href="#example-64"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;sAdd('key1' , 'member1');
$redis-&gt;sAdd('key1' , 'member2');
$redis-&gt;sAdd('key1' , 'member3'); /* 'key1' =&gt; {'member1', 'member2', 'member3'}*/
$redis-&gt;sRem('key1', 'member2', 'member3'); /*return 2. 'key1' =&gt; {'member1'} */
</code></pre>

<h3>
<a name="user-content-sunion" class="anchor" href="#sunion"><span class="octicon octicon-link"></span></a>sUnion</h3>

<hr><p><em><strong>Description</strong></em>: Performs the union between N sets and returns it.</p>

<h5>
<a name="user-content-parameters-97" class="anchor" href="#parameters-97"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Keys</em>: key1, key2, ... , keyN: Any number of keys corresponding to sets in redis.</p>

<h5>
<a name="user-content-return-value-95" class="anchor" href="#return-value-95"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array of strings</em>: The union of all these sets.</p>

<h5>
<a name="user-content-example-65" class="anchor" href="#example-65"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s0', 's1', 's2');

$redis-&gt;sAdd('s0', '1');
$redis-&gt;sAdd('s0', '2');
$redis-&gt;sAdd('s1', '3');
$redis-&gt;sAdd('s1', '1');
$redis-&gt;sAdd('s2', '3');
$redis-&gt;sAdd('s2', '4');

var_dump($redis-&gt;sUnion('s0', 's1', 's2'));
</code></pre>

<p>Return value: all elements that are either in s0 or in s1 or in s2.</p>

<pre><code>array(4) {
  [0]=&gt;
  string(1) "3"
  [1]=&gt;
  string(1) "4"
  [2]=&gt;
  string(1) "1"
  [3]=&gt;
  string(1) "2"
}
</code></pre>

<h3>
<a name="user-content-sunionstore" class="anchor" href="#sunionstore"><span class="octicon octicon-link"></span></a>sUnionStore</h3>

<hr><p><em><strong>Description</strong></em>: Performs the same action as sUnion, but stores the result in the first key</p>

<h5>
<a name="user-content-parameters-98" class="anchor" href="#parameters-98"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: dstkey, the key to store the diff into.</p>

<p><em>Keys</em>: key1, key2, ... , keyN: Any number of keys corresponding to sets in redis.</p>

<h5>
<a name="user-content-return-value-96" class="anchor" href="#return-value-96"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>INTEGER</em>: The cardinality of the resulting set, or <code>FALSE</code> in case of a missing key.</p>

<h5>
<a name="user-content-example-66" class="anchor" href="#example-66"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('s0', 's1', 's2');

$redis-&gt;sAdd('s0', '1');
$redis-&gt;sAdd('s0', '2');
$redis-&gt;sAdd('s1', '3');
$redis-&gt;sAdd('s1', '1');
$redis-&gt;sAdd('s2', '3');
$redis-&gt;sAdd('s2', '4');

var_dump($redis-&gt;sUnionStore('dst', 's0', 's1', 's2'));
var_dump($redis-&gt;sMembers('dst'));
</code></pre>

<p>Return value: the number of elements that are either in s0 or in s1 or in s2.</p>

<pre><code>int(4)
array(4) {
  [0]=&gt;
  string(1) "3"
  [1]=&gt;
  string(1) "4"
  [2]=&gt;
  string(1) "1"
  [3]=&gt;
  string(1) "2"
}
</code></pre>

<h3>
<a name="user-content-sscan" class="anchor" href="#sscan"><span class="octicon octicon-link"></span></a>sScan</h3>

<hr><p><em><strong>Description</strong></em>: Scan a set for members</p>

<h5>
<a name="user-content-parameters-99" class="anchor" href="#parameters-99"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>Key</em>: The set to search
<em>iterator</em>: LONG (reference) to the iterator as we go
<em>pattern</em>: String, optional pattern to match against
<em>count</em>: How many members to return at a time (Redis might return a different amount)</p>

<h5>
<a name="user-content-return-value-97" class="anchor" href="#return-value-97"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array, boolean</em>: PHPRedis will return an array of keys or FALSE when we're done iterating</p>

<h5>
<a name="user-content-example-67" class="anchor" href="#example-67"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$it = NULL;
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY); /* don't return empty results until we're done */
while($arr_mems = $redis-&gt;sscan('set', $it, "*pattern*")) {
    foreach($arr_mems as $str_mem) {
        echo "Member: $str_mem\n";
    }
}

$it = NULL;
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_NORETRY); /* return after each iteration, even if empty */
while(($arr_mems = $redis-&gt;sscan('set', $it, "*pattern*"))!==FALSE) {
    if(count($arr_mems) &gt; 0) {
        foreach($arr_mems as $str_mem) {
            echo "Member found: $str_mem\n";
        }
    } else {
        echo "No members in this iteration, iterator value: $it\n";
    }
}
</code></pre>

<h2>
<a name="user-content-sorted-sets" class="anchor" href="#sorted-sets"><span class="octicon octicon-link"></span></a>Sorted sets</h2>

<ul class="task-list">
<li>
<a href="#zadd">zAdd</a> - Add one or more members to a sorted set or update its score if it already exists</li>
<li>
<a href="#zcard-zsize">zCard, zSize</a> - Get the number of members in a sorted set</li>
<li>
<a href="#zcount">zCount</a> - Count the members in a sorted set with scores within the given values</li>
<li>
<a href="#zincrby">zIncrBy</a> - Increment the score of a member in a sorted set</li>
<li>
<a href="#zinter">zInter</a> - Intersect multiple sorted sets and store the resulting sorted set in a new key</li>
<li>
<a href="#zrange">zRange</a> - Return a range of members in a sorted set, by index</li>
<li>
<a href="#zrangebyscore-zrevrangebyscore">zRangeByScore, zRevRangeByScore</a> - Return a range of members in a sorted set, by score</li>
<li>
<a href="#zrank-zrevrank">zRank, zRevRank</a> - Determine the index of a member in a sorted set</li>
<li>
<a href="#zrem-zdelete">zRem, zDelete</a> - Remove one or more members from a sorted set</li>
<li>
<a href="#zremrangebyrank-zdeleterangebyrank">zRemRangeByRank, zDeleteRangeByRank</a> - Remove all members in a sorted set within the given indexes</li>
<li>
<a href="#zremrangebyscore-zdeleterangebyscore">zRemRangeByScore, zDeleteRangeByScore</a> - Remove all members in a sorted set within the given scores</li>
<li>
<a href="#zrevrange">zRevRange</a> - Return a range of members in a sorted set, by index, with scores ordered from high to low</li>
<li>
<a href="#zscore">zScore</a> - Get the score associated with the given member in a sorted set</li>
<li>
<a href="#zunion">zUnion</a> - Add multiple sorted sets and store the resulting sorted set in a new key</li>
<li>
<a href="#zscan">zScan</a> - Scan a sorted set for members</li>
</ul><h3>
<a name="user-content-zadd" class="anchor" href="#zadd"><span class="octicon octicon-link"></span></a>zAdd</h3>

<hr><p><em><strong>Description</strong></em>: Add one or more members to a sorted set or update its score if it already exists</p>

<h5>
<a name="user-content-parameters-100" class="anchor" href="#parameters-100"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>score</em> : double<br><em>value</em>: string  </p>

<h5>
<a name="user-content-return-value-98" class="anchor" href="#return-value-98"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Long</em> 1 if the element is added. 0 otherwise.</p>

<h5>
<a name="user-content-example-68" class="anchor" href="#example-68"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 1, 'val1');
$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 5, 'val5');
$redis-&gt;zRange('key', 0, -1); // array(val0, val1, val5)
</code></pre>

<h3>
<a name="user-content-zcard-zsize" class="anchor" href="#zcard-zsize"><span class="octicon octicon-link"></span></a>zCard, zSize</h3>

<hr><p><em><strong>Description</strong></em>: Returns the cardinality of an ordered set.</p>

<h5>
<a name="user-content-parameters-101" class="anchor" href="#parameters-101"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em></p>

<h5>
<a name="user-content-return-value-99" class="anchor" href="#return-value-99"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Long</em>, the set's cardinality</p>

<h5>
<a name="user-content-example-69" class="anchor" href="#example-69"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zSize('key'); /* 3 */
</code></pre>

<h3>
<a name="user-content-zcount" class="anchor" href="#zcount"><span class="octicon octicon-link"></span></a>zCount</h3>

<hr><p><em><strong>Description</strong></em>: Returns the <em>number</em>
 of elements of the sorted set stored at the specified key which have 
scores in the range [start,end]. Adding a parenthesis before <code>start</code> or <code>end</code> excludes it from the range. +inf and -inf are also valid limits.</p>

<h5>
<a name="user-content-parameters-102" class="anchor" href="#parameters-102"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: string<br><em>end</em>: string  </p>

<h5>
<a name="user-content-return-value-100" class="anchor" href="#return-value-100"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> the size of a corresponding zRangeByScore.  </p>

<h5>
<a name="user-content-example-70" class="anchor" href="#example-70"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zCount('key', 0, 3); /* 2, corresponding to array('val0', 'val2') */
</code></pre>

<h3>
<a name="user-content-zincrby" class="anchor" href="#zincrby"><span class="octicon octicon-link"></span></a>zIncrBy</h3>

<hr><p><em><strong>Description</strong></em>: Increments the score of a member from a sorted set by a given amount.</p>

<h5>
<a name="user-content-parameters-103" class="anchor" href="#parameters-103"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>value</em>: (double) value that will be added to the member's score<br><em>member</em>  </p>

<h5>
<a name="user-content-return-value-101" class="anchor" href="#return-value-101"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>DOUBLE</em> the new value</p>

<h5>
<a name="user-content-examples-27" class="anchor" href="#examples-27"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;delete('key');
$redis-&gt;zIncrBy('key', 2.5, 'member1'); /* key or member1 didn't exist, so member1's score is to 0 before the increment */
                      /* and now has the value 2.5  */
$redis-&gt;zIncrBy('key', 1, 'member1'); /* 3.5 */
</code></pre>

<h3>
<a name="user-content-zinter" class="anchor" href="#zinter"><span class="octicon octicon-link"></span></a>zInter</h3>

<hr><p><em><strong>Description</strong></em>: Creates an intersection of
 sorted sets given in second argument. The result of the union will be 
stored in the sorted set defined by the first argument.</p>

<p>The third optionnel argument defines <code>weights</code> to apply to the sorted sets in input. In this case, the <code>weights</code> will be multiplied by the score of each element in the sorted set before applying the aggregation.
The forth argument defines the <code>AGGREGATE</code> option which specify how the results of the union are aggregated.</p>

<h5>
<a name="user-content-parameters-104" class="anchor" href="#parameters-104"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>keyOutput</em><br><em>arrayZSetKeys</em><br><em>arrayWeights</em><br><em>aggregateFunction</em> Either "SUM", "MIN", or "MAX": defines the behaviour to use on duplicate entries during the zInter.  </p>

<h5>
<a name="user-content-return-value-102" class="anchor" href="#return-value-102"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The number of values in the new sorted set.</p>

<h5>
<a name="user-content-example-71" class="anchor" href="#example-71"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('k1');
$redis-&gt;delete('k2');
$redis-&gt;delete('k3');

$redis-&gt;delete('ko1');
$redis-&gt;delete('ko2');
$redis-&gt;delete('ko3');
$redis-&gt;delete('ko4');

$redis-&gt;zAdd('k1', 0, 'val0');
$redis-&gt;zAdd('k1', 1, 'val1');
$redis-&gt;zAdd('k1', 3, 'val3');

$redis-&gt;zAdd('k2', 2, 'val1');
$redis-&gt;zAdd('k2', 3, 'val3');

$redis-&gt;zInter('ko1', array('k1', 'k2'));               /* 2, 'ko1' =&gt; array('val1', 'val3') */
$redis-&gt;zInter('ko2', array('k1', 'k2'), array(1, 1));  /* 2, 'ko2' =&gt; array('val1', 'val3') */

/* Weighted zInter */
$redis-&gt;zInter('ko3', array('k1', 'k2'), array(1, 5), 'min'); /* 2, 'ko3' =&gt; array('val1', 'val3') */
$redis-&gt;zInter('ko4', array('k1', 'k2'), array(1, 5), 'max'); /* 2, 'ko4' =&gt; array('val3', 'val1') */
</code></pre>

<h3>
<a name="user-content-zrange" class="anchor" href="#zrange"><span class="octicon octicon-link"></span></a>zRange</h3>

<hr><p><em><strong>Description</strong></em>: Returns a range of elements from the ordered set stored at the specified key, with values in the range [start, end].</p>

<p>Start and stop are interpreted as zero-based indices:
0 the first element, 1 the second ...
-1 the last element, -2 the penultimate ...</p>

<h5>
<a name="user-content-parameters-105" class="anchor" href="#parameters-105"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: long<br><em>end</em>: long<br><em>withscores</em>: bool = false  </p>

<h5>
<a name="user-content-return-value-103" class="anchor" href="#return-value-103"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> containing the values in specified range. </p>

<h5>
<a name="user-content-example-72" class="anchor" href="#example-72"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key1', 0, 'val0');
$redis-&gt;zAdd('key1', 2, 'val2');
$redis-&gt;zAdd('key1', 10, 'val10');
$redis-&gt;zRange('key1', 0, -1); /* array('val0', 'val2', 'val10') */

// with scores
$redis-&gt;zRange('key1', 0, -1, true); /* array('val0' =&gt; 0, 'val2' =&gt; 2, 'val10' =&gt; 10) */
</code></pre>

<h3>
<a name="user-content-zrangebyscore-zrevrangebyscore" class="anchor" href="#zrangebyscore-zrevrangebyscore"><span class="octicon octicon-link"></span></a>zRangeByScore, zRevRangeByScore</h3>

<hr><p><em><strong>Description</strong></em>: Returns the elements of 
the sorted set stored at the specified key which have scores in the 
range [start,end]. Adding a parenthesis before <code>start</code> or <code>end</code>
 excludes it from the range. +inf and -inf are also valid limits. 
zRevRangeByScore returns the same items in reverse order, when the <code>start</code> and <code>end</code> parameters are swapped.</p>

<h5>
<a name="user-content-parameters-106" class="anchor" href="#parameters-106"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: string<br><em>end</em>: string<br><em>options</em>: array  </p>

<p>Two options are available: <code>withscores =&gt; TRUE</code>, and <code>limit =&gt; array($offset, $count)</code></p>

<h5>
<a name="user-content-return-value-104" class="anchor" href="#return-value-104"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> containing the values in specified range. </p>

<h5>
<a name="user-content-example-73" class="anchor" href="#example-73"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zRangeByScore('key', 0, 3); /* array('val0', 'val2') */
$redis-&gt;zRangeByScore('key', 0, 3, array('withscores' =&gt; TRUE); /* array('val0' =&gt; 0, 'val2' =&gt; 2) */
$redis-&gt;zRangeByScore('key', 0, 3, array('limit' =&gt; array(1, 1)); /* array('val2') */
$redis-&gt;zRangeByScore('key', 0, 3, array('withscores' =&gt; TRUE, 'limit' =&gt; array(1, 1)); /* array('val2' =&gt; 2) */
</code></pre>

<h3>
<a name="user-content-zrank-zrevrank" class="anchor" href="#zrank-zrevrank"><span class="octicon octicon-link"></span></a>zRank, zRevRank</h3>

<hr><p><em><strong>Description</strong></em>: Returns the rank of a 
given member in the specified sorted set, starting at 0 for the item 
with the smallest score. zRevRank starts at 0 for the item with the <em>largest</em> score.</p>

<h5>
<a name="user-content-parameters-107" class="anchor" href="#parameters-107"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>member</em>  </p>

<h5>
<a name="user-content-return-value-105" class="anchor" href="#return-value-105"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Long</em>, the item's score.</p>

<h5>
<a name="user-content-example-74" class="anchor" href="#example-74"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('z');
$redis-&gt;zAdd('key', 1, 'one');
$redis-&gt;zAdd('key', 2, 'two');
$redis-&gt;zRank('key', 'one'); /* 0 */
$redis-&gt;zRank('key', 'two'); /* 1 */
$redis-&gt;zRevRank('key', 'one'); /* 1 */
$redis-&gt;zRevRank('key', 'two'); /* 0 */
</code></pre>

<h3>
<a name="user-content-zrem-zdelete" class="anchor" href="#zrem-zdelete"><span class="octicon octicon-link"></span></a>zRem, zDelete</h3>

<hr><p><em><strong>Description</strong></em>: Deletes a specified member from the ordered set.</p>

<h5>
<a name="user-content-parameters-108" class="anchor" href="#parameters-108"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>member</em>  </p>

<h5>
<a name="user-content-return-value-106" class="anchor" href="#return-value-106"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> 1 on success, 0 on failure.</p>

<h5>
<a name="user-content-example-75" class="anchor" href="#example-75"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zDelete('key', 'val2');
$redis-&gt;zRange('key', 0, -1); /* array('val0', 'val10') */
</code></pre>

<h3>
<a name="user-content-zremrangebyrank-zdeleterangebyrank" class="anchor" href="#zremrangebyrank-zdeleterangebyrank"><span class="octicon octicon-link"></span></a>zRemRangeByRank, zDeleteRangeByRank</h3>

<hr><p><em><strong>Description</strong></em>: Deletes the elements of the sorted set stored at the specified key which have rank in the range [start,end].</p>

<h5>
<a name="user-content-parameters-109" class="anchor" href="#parameters-109"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: LONG<br><em>end</em>: LONG  </p>

<h5>
<a name="user-content-return-value-107" class="anchor" href="#return-value-107"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The number of values deleted from the sorted set</p>

<h5>
<a name="user-content-example-76" class="anchor" href="#example-76"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 1, 'one');
$redis-&gt;zAdd('key', 2, 'two');
$redis-&gt;zAdd('key', 3, 'three');
$redis-&gt;zRemRangeByRank('key', 0, 1); /* 2 */
$redis-&gt;zRange('key', 0, -1, array('withscores' =&gt; TRUE)); /* array('three' =&gt; 3) */
</code></pre>

<h3>
<a name="user-content-zremrangebyscore-zdeleterangebyscore" class="anchor" href="#zremrangebyscore-zdeleterangebyscore"><span class="octicon octicon-link"></span></a>zRemRangeByScore, zDeleteRangeByScore</h3>

<hr><p><em><strong>Description</strong></em>: Deletes the elements of the sorted set stored at the specified key which have scores in the range [start,end].</p>

<h5>
<a name="user-content-parameters-110" class="anchor" href="#parameters-110"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: double or "+inf" or "-inf" string<br><em>end</em>: double or "+inf" or "-inf" string  </p>

<h5>
<a name="user-content-return-value-108" class="anchor" href="#return-value-108"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The number of values deleted from the sorted set</p>

<h5>
<a name="user-content-example-77" class="anchor" href="#example-77"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zRemRangeByScore('key', 0, 3); /* 2 */
</code></pre>

<h3>
<a name="user-content-zrevrange" class="anchor" href="#zrevrange"><span class="octicon octicon-link"></span></a>zRevRange</h3>

<hr><p><em><strong>Description</strong></em>: Returns the elements of 
the sorted set stored at the specified key in the range [start, end] in 
reverse order. start and stop are interpretated as zero-based indices:
0 the first element, 1 the second ...
-1 the last element, -2 the penultimate ...</p>

<h5>
<a name="user-content-parameters-111" class="anchor" href="#parameters-111"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>start</em>: long<br><em>end</em>: long<br><em>withscores</em>: bool = false  </p>

<h5>
<a name="user-content-return-value-109" class="anchor" href="#return-value-109"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array</em> containing the values in specified range. </p>

<h5>
<a name="user-content-example-78" class="anchor" href="#example-78"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 0, 'val0');
$redis-&gt;zAdd('key', 2, 'val2');
$redis-&gt;zAdd('key', 10, 'val10');
$redis-&gt;zRevRange('key', 0, -1); /* array('val10', 'val2', 'val0') */

// with scores
$redis-&gt;zRevRange('key', 0, -1, true); /* array('val10' =&gt; 10, 'val2' =&gt; 2, 'val0' =&gt; 0) */
</code></pre>

<h3>
<a name="user-content-zscore" class="anchor" href="#zscore"><span class="octicon octicon-link"></span></a>zScore</h3>

<hr><p><em><strong>Description</strong></em>: Returns the score of a given member in the specified sorted set.</p>

<h5>
<a name="user-content-parameters-112" class="anchor" href="#parameters-112"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em><br><em>member</em>  </p>

<h5>
<a name="user-content-return-value-110" class="anchor" href="#return-value-110"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Double</em></p>

<h5>
<a name="user-content-example-79" class="anchor" href="#example-79"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;zAdd('key', 2.5, 'val2');
$redis-&gt;zScore('key', 'val2'); /* 2.5 */
</code></pre>

<h3>
<a name="user-content-zunion" class="anchor" href="#zunion"><span class="octicon octicon-link"></span></a>zUnion</h3>

<hr><p><em><strong>Description</strong></em>: Creates an union of sorted
 sets given in second argument. The result of the union will be stored 
in the sorted set defined by the first argument.</p>

<p>The third optionnel argument defines <code>weights</code> to apply to the sorted sets in input. In this case, the <code>weights</code> will be multiplied by the score of each element in the sorted set before applying the aggregation.
The forth argument defines the <code>AGGREGATE</code> option which specify how the results of the union are aggregated.</p>

<h5>
<a name="user-content-parameters-113" class="anchor" href="#parameters-113"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>keyOutput</em><br><em>arrayZSetKeys</em><br><em>arrayWeights</em><br><em>aggregateFunction</em> Either "SUM", "MIN", or "MAX": defines the behaviour to use on duplicate entries during the zUnion.  </p>

<h5>
<a name="user-content-return-value-111" class="anchor" href="#return-value-111"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>LONG</em> The number of values in the new sorted set.</p>

<h5>
<a name="user-content-example-80" class="anchor" href="#example-80"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;delete('k1');
$redis-&gt;delete('k2');
$redis-&gt;delete('k3');
$redis-&gt;delete('ko1');
$redis-&gt;delete('ko2');
$redis-&gt;delete('ko3');

$redis-&gt;zAdd('k1', 0, 'val0');
$redis-&gt;zAdd('k1', 1, 'val1');

$redis-&gt;zAdd('k2', 2, 'val2');
$redis-&gt;zAdd('k2', 3, 'val3');

$redis-&gt;zUnion('ko1', array('k1', 'k2')); /* 4, 'ko1' =&gt; array('val0', 'val1', 'val2', 'val3') */

/* Weighted zUnion */
$redis-&gt;zUnion('ko2', array('k1', 'k2'), array(1, 1)); /* 4, 'ko2' =&gt; array('val0', 'val1', 'val2', 'val3') */
$redis-&gt;zUnion('ko3', array('k1', 'k2'), array(5, 1)); /* 4, 'ko3' =&gt; array('val0', 'val2', 'val3', 'val1') */
</code></pre>

<h3>
<a name="user-content-zscan" class="anchor" href="#zscan"><span class="octicon octicon-link"></span></a>zScan</h3>

<hr><p><em><strong>Description</strong></em>: Scan a sorted set for members, with optional pattern and count</p>

<h5>
<a name="user-content-parameters-114" class="anchor" href="#parameters-114"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>key</em>: String, the set to scan
<em>iterator</em>: Long (reference), initialized to NULL
<em>pattern</em>: String (optional), the pattern to match
<em>count</em>: How many keys to return per iteration (Redis might return a different number)</p>

<h5>
<a name="user-content-return-value-112" class="anchor" href="#return-value-112"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>Array, boolean</em> PHPRedis will return matching keys from Redis, or FALSE when iteration is complete</p>

<h5>
<a name="user-content-example-81" class="anchor" href="#example-81"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$it = NULL;
$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY);
while($arr_matches = $redis-&gt;zscan('zset', $it, '*pattern*')) {
    foreach($arr_matches as $str_mem =&gt; $f_score) {
        echo "Key: $str_mem, Score: $f_score\n";
    }
}
</code></pre>

<h2>
<a name="user-content-pubsub" class="anchor" href="#pubsub"><span class="octicon octicon-link"></span></a>Pub/sub</h2>

<ul class="task-list">
<li>
<a href="#psubscribe">psubscribe</a> - Subscribe to channels by pattern</li>
<li>
<a href="#publish">publish</a> - Post a message to a channel</li>
<li>
<a href="#subscribe">subscribe</a> - Subscribe to channels</li>
<li>
<a href="#pubsub">pubsub</a> - Introspection into the pub/sub subsystem</li>
</ul><h3>
<a name="user-content-psubscribe" class="anchor" href="#psubscribe"><span class="octicon octicon-link"></span></a>psubscribe</h3>

<hr><p><em><strong>Description</strong></em>: Subscribe to channels by pattern</p>

<h5>
<a name="user-content-parameters-115" class="anchor" href="#parameters-115"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>patterns</em>: An array of patterns to match
<em>callback</em>: Either a string or an array with an object and 
method.  The callback will get four arguments ($redis, $pattern, 
$channel, $message)</p>

<h5>
<a name="user-content-example-82" class="anchor" href="#example-82"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>function psubscribe($redis, $pattern, $chan, $msg) {
    echo "Pattern: $pattern\n";
    echo "Channel: $chan\n";
    echo "Payload: $msg\n";
}
</code></pre>

<h3>
<a name="user-content-publish" class="anchor" href="#publish"><span class="octicon octicon-link"></span></a>publish</h3>

<hr><p><em><strong>Description</strong></em>: Publish messages to channels. Warning: this function will probably change in the future.</p>

<h5>
<a name="user-content-parameters-116" class="anchor" href="#parameters-116"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>channel</em>: a channel to publish to<br><em>messsage</em>: string  </p>

<h5>
<a name="user-content-example-83" class="anchor" href="#example-83"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;publish('chan-1', 'hello, world!'); // send message.
</code></pre>

<h3>
<a name="user-content-subscribe" class="anchor" href="#subscribe"><span class="octicon octicon-link"></span></a>subscribe</h3>

<hr><p><em><strong>Description</strong></em>: Subscribe to channels. Warning: this function will probably change in the future.</p>

<h5>
<a name="user-content-parameters-117" class="anchor" href="#parameters-117"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>channels</em>: an array of channels to subscribe to<br><em>callback</em>:
 either a string or an array($instance, 'method_name'). The callback 
function receives 3 parameters: the redis instance, the channel name, 
and the message.  </p>

<h5>
<a name="user-content-example-84" class="anchor" href="#example-84"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>function f($redis, $chan, $msg) {
    switch($chan) {
        case 'chan-1':
            ...
            break;

        case 'chan-2':
            ...
            break;

        case 'chan-2':
            ...
            break;
    }
}

$redis-&gt;subscribe(array('chan-1', 'chan-2', 'chan-3'), 'f'); // subscribe to 3 chans
</code></pre>

<h3>
<a name="user-content-pubsub-1" class="anchor" href="#pubsub-1"><span class="octicon octicon-link"></span></a>pubsub</h3>

<hr><p><em><strong>Description</strong></em>: A command allowing you to get information on the Redis pub/sub system.</p>

<h5>
<a name="user-content-parameters-118" class="anchor" href="#parameters-118"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>keyword</em>: String, which can be: "channels", "numsub", or "numpat"
<em>argument</em>:  Optional, variant.  For the "channels" subcommand, you can pass a string pattern.  For "numsub" an array of channel names.</p>

<h5>
<a name="user-content-return-value-113" class="anchor" href="#return-value-113"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>CHANNELS</em>: Returns an array where the members are the matching channels.
<em>NUMSUB</em>:  Returns a key/value array where the keys are channel names and values are their counts.
<em>NUMPAT</em>:  Integer return containing the number active pattern subscriptions</p>

<h5>
<a name="user-content-example-85" class="anchor" href="#example-85"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;pubsub("channels"); /*All channels */
$redis-&gt;pubsub("channels", "*pattern*"); /* Just channels matching your pattern */
$redis-&gt;pubsub("numsub", Array("chan1", "chan2")); /*Get subscriber counts for 'chan1' and 'chan2'*/
$redsi-&gt;pubsub("numpat"); /* Get the number of pattern subscribers */
</code></pre>

<h2>
<a name="user-content-transactions" class="anchor" href="#transactions"><span class="octicon octicon-link"></span></a>Transactions</h2>

<ol class="task-list">
<li>
<a href="#multi-exec-discard">multi, exec, discard</a> - Enter and exit transactional mode</li>
<li>
<a href="#watch-unwatch">watch, unwatch</a> - Watches a key for modifications by another client.</li>
</ol><h3>
<a name="user-content-multi-exec-discard" class="anchor" href="#multi-exec-discard"><span class="octicon octicon-link"></span></a>multi, exec, discard.</h3>

<hr><p><em><strong>Description</strong></em>: Enter and exit transactional mode.  </p>

<h5>
<a name="user-content-parameters-119" class="anchor" href="#parameters-119"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p>(optional) <code>Redis::MULTI</code> or <code>Redis::PIPELINE</code>. Defaults to <code>Redis::MULTI</code>. A <code>Redis::MULTI</code> block of commands runs as a single transaction; a <code>Redis::PIPELINE</code> block is simply transmitted faster to the server, but without any guarantee of atomicity. <code>discard</code> cancels a transaction.  </p>

<h5>
<a name="user-content-return-value-114" class="anchor" href="#return-value-114"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><code>multi()</code> returns the Redis instance and enters multi-mode. Once in multi-mode, all subsequent method calls return the same object until <code>exec()</code> is called.</p>

<h5>
<a name="user-content-example-86" class="anchor" href="#example-86"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$ret = $redis-&gt;multi()
    -&gt;set('key1', 'val1')
    -&gt;get('key1')
    -&gt;set('key2', 'val2')
    -&gt;get('key2')
    -&gt;exec();

/*
$ret == array(
    0 =&gt; TRUE,
    1 =&gt; 'val1',
    2 =&gt; TRUE,
    3 =&gt; 'val2');
*/
</code></pre>

<h3>
<a name="user-content-watch-unwatch" class="anchor" href="#watch-unwatch"><span class="octicon octicon-link"></span></a>watch, unwatch</h3>

<hr><p><em><strong>Description</strong></em>: Watches a key for modifications by another client.</p>

<p>If the key is modified between <code>WATCH</code> and <code>EXEC</code>, the MULTI/EXEC transaction will fail (return <code>FALSE</code>). <code>unwatch</code> cancels all the watching of all keys by this client.</p>

<h5>
<a name="user-content-parameters-120" class="anchor" href="#parameters-120"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>keys</em>: a list of keys</p>

<h5>
<a name="user-content-example-87" class="anchor" href="#example-87"><span class="octicon octicon-link"></span></a><em>Example</em>
</h5>

<pre><code>$redis-&gt;watch('x');
/* long code here during the execution of which other clients could well modify `x` */
$ret = $redis-&gt;multi()
    -&gt;incr('x')
    -&gt;exec();
/*
$ret = FALSE if x has been modified between the call to WATCH and the call to EXEC.
*/
</code></pre>

<h2>
<a name="user-content-scripting" class="anchor" href="#scripting"><span class="octicon octicon-link"></span></a>Scripting</h2>

<ul class="task-list">
<li>
<a href="#">eval</a> - Evaluate a LUA script serverside</li>
<li>
<a href="#">evalSha</a> - Evaluate a LUA script serverside, from the SHA1 hash of the script instead of the script itself</li>
<li>
<a href="#">script</a> - Execute the Redis SCRIPT command to perform various operations on the scripting subsystem</li>
<li>
<a href="#">getLastError</a> - The last error message (if any)</li>
<li>
<a href="#">clearLastError</a> - Clear the last error message</li>
<li>
<a href="#">_prefix</a> - A utility method to prefix the value with the prefix setting for phpredis</li>
<li>
<a href="#">_unserialize</a> - A utility method to unserialize data with whatever serializer is set up</li>
<li>
<a href="#">_serialize</a> - A utility method to serialize data with whatever serializer is set up</li>
</ul><h3>
<a name="user-content-eval" class="anchor" href="#eval"><span class="octicon octicon-link"></span></a>eval</h3>

<hr><p><em><strong>Description</strong></em>: Evaluate a LUA script serverside</p>

<h5>
<a name="user-content-parameters-121" class="anchor" href="#parameters-121"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>script</em> string.<br><em>args</em> array, optional.<br><em>num_keys</em> int, optional.  </p>

<h5>
<a name="user-content-return-value-115" class="anchor" href="#return-value-115"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>Mixed.  What is returned depends on what the LUA script itself returns, which could be a scalar value (int/string), or an array.
Arrays that are returned can also contain other arrays, if that's how it was set up in your LUA script.  If there is an error
executing the LUA script, the getLastError() function can tell you the message that came back from Redis (e.g. compile error).</p>

<h5>
<a name="user-content-examples-28" class="anchor" href="#examples-28"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;eval("return 1"); // Returns an integer: 1
$redis-&gt;eval("return {1,2,3}"); // Returns Array(1,2,3)
$redis-&gt;del('mylist');
$redis-&gt;rpush('mylist','a');
$redis-&gt;rpush('mylist','b');
$redis-&gt;rpush('mylist','c');
// Nested response:  Array(1,2,3,Array('a','b','c'));
$redis-&gt;eval("return {1,2,3,redis.call('lrange','mylist',0,-1)}}");
</code></pre>

<h3>
<a name="user-content-evalsha" class="anchor" href="#evalsha"><span class="octicon octicon-link"></span></a>evalSha</h3>

<hr><p><em><strong>Description</strong></em>: Evaluate a LUA script serverside, from the SHA1 hash of the script instead of the script itself.</p>

<p>In order to run this command Redis will have to have already loaded the script,
either by running it or via the SCRIPT LOAD command.</p>

<h5>
<a name="user-content-parameters-122" class="anchor" href="#parameters-122"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>script_sha</em> string.  The sha1 encoded hash of the script you want to run.<br><em>args</em> array, optional.  Arguments to pass to the LUA script.<br><em>num_keys</em> int, optional.  The number of arguments that should go into the KEYS array, vs. the ARGV array when Redis spins the script  </p>

<h5>
<a name="user-content-return-value-116" class="anchor" href="#return-value-116"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>Mixed.  See EVAL</p>

<h5>
<a name="user-content-examples-29" class="anchor" href="#examples-29"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$script = 'return 1';
$sha = $redis-&gt;script('load', $script);
$redis-&gt;evalSha($sha); // Returns 1
</code></pre>

<h3>
<a name="user-content-script" class="anchor" href="#script"><span class="octicon octicon-link"></span></a>script</h3>

<hr><p><em><strong>Description</strong></em>: Execute the Redis SCRIPT command to perform various operations on the scripting subsystem.</p>

<h5>
<a name="user-content-usage-1" class="anchor" href="#usage-1"><span class="octicon octicon-link"></span></a><em>Usage</em>
</h5>

<pre><code>$redis-&gt;script('load', $script);
$redis-&gt;script('flush');
$redis-&gt;script('kill');
$redis-&gt;script('exists', $script1, [$script2, $script3, ...]);
</code></pre>

<h5>
<a name="user-content-return-value-117" class="anchor" href="#return-value-117"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<ul class="task-list">
<li>SCRIPT LOAD will return the SHA1 hash of the passed script on success, and FALSE on failure.</li>
<li>SCRIPT FLUSH should always return TRUE</li>
<li>SCRIPT KILL will return true if a script was able to be killed and false if not</li>
<li>SCRIPT EXISTS will return an array with TRUE or FALSE for each passed script</li>
</ul><h3>
<a name="user-content-client" class="anchor" href="#client"><span class="octicon octicon-link"></span></a>client</h3>

<hr><p><em><strong>Description</strong></em>: Issue the CLIENT command with various arguments.</p>

<p>The Redis CLIENT command can be used in four ways.  </p>

<ul class="task-list">
<li>CLIENT LIST</li>
<li>CLIENT GETNAME</li>
<li>CLIENT SETNAME [name]</li>
<li>CLIENT KILL [ip:port]</li>
</ul><h5>
<a name="user-content-usage-2" class="anchor" href="#usage-2"><span class="octicon octicon-link"></span></a><em>Usage</em>
</h5>

<pre><code>$redis-&gt;client('list'); // Get a list of clients
$redis-&gt;client('getname'); // Get the name of the current connection
$redis-&gt;client('setname', 'somename'); // Set the name of the current connection
$redis-&gt;client('kill', &lt;ip:port&gt;); // Kill the process at ip:port
</code></pre>

<h5>
<a name="user-content-return-value-118" class="anchor" href="#return-value-118"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>This will vary depending on which client command was executed.  </p>

<ul class="task-list">
<li>CLIENT LIST will return an array of arrays with client information.</li>
<li>CLIENT GETNAME will return the client name or false if none has been set</li>
<li>CLIENT SETNAME will return true if it can be set and false if not</li>
<li>CLIENT KILL will return true if the client can be killed, and false if not</li>
</ul><p>Note:  phpredis will attempt to reconnect so you can actually kill your own connection
but may not notice losing it!</p>

<h3>
<a name="user-content-getlasterror" class="anchor" href="#getlasterror"><span class="octicon octicon-link"></span></a>getLastError</h3>

<hr><p><em><strong>Description</strong></em>: The last error message (if any)</p>

<h5>
<a name="user-content-parameters-123" class="anchor" href="#parameters-123"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>none</em>  </p>

<h5>
<a name="user-content-return-value-119" class="anchor" href="#return-value-119"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>A string with the last returned script based error message, or NULL if there is no error</p>

<h5>
<a name="user-content-examples-30" class="anchor" href="#examples-30"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;eval('this-is-not-lua');
$err = $redis-&gt;getLastError(); 
// "ERR Error compiling script (new function): user_script:1: '=' expected near '-'"
</code></pre>

<h3>
<a name="user-content-clearlasterror" class="anchor" href="#clearlasterror"><span class="octicon octicon-link"></span></a>clearLastError</h3>

<hr><p><em><strong>Description</strong></em>: Clear the last error message  </p>

<h5>
<a name="user-content-parameters-124" class="anchor" href="#parameters-124"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>none</em>  </p>

<h5>
<a name="user-content-return-value-120" class="anchor" href="#return-value-120"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p><em>BOOL</em> TRUE  </p>

<h5>
<a name="user-content-examples-31" class="anchor" href="#examples-31"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;set('x', 'a');
$redis-&gt;incr('x');
$err = $redis-&gt;getLastError();
// "ERR value is not an integer or out of range"
$redis-&gt;clearLastError();
$err = $redis-&gt;getLastError();
// NULL
</code></pre>

<h3>
<a name="user-content-_prefix" class="anchor" href="#_prefix"><span class="octicon octicon-link"></span></a>_prefix</h3>

<hr><p><em><strong>Description</strong></em>: A utility method to prefix the value with the prefix setting for phpredis.</p>

<h5>
<a name="user-content-parameters-125" class="anchor" href="#parameters-125"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>value</em> string.  The value you wish to prefix  </p>

<h5>
<a name="user-content-return-value-121" class="anchor" href="#return-value-121"><span class="octicon octicon-link"></span></a><em>Return value</em>
</h5>

<p>If a prefix is set up, the value now prefixed.  If there is no prefix, the value will be returned unchanged.</p>

<h5>
<a name="user-content-examples-32" class="anchor" href="#examples-32"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;setOption(Redis::OPT_PREFIX, 'my-prefix:');
$redis-&gt;_prefix('my-value'); // Will return 'my-prefix:my-value'
</code></pre>

<h3>
<a name="user-content-_serialize" class="anchor" href="#_serialize"><span class="octicon octicon-link"></span></a>_serialize</h3>

<hr><p><em><strong>Description</strong></em>: A utility method to serialize values manually.</p>

<p>This method allows you to serialize a value with whatever serializer is configured, manually.
This can be useful for serialization/unserialization of data going in and out of EVAL commands
as phpredis can't automatically do this itself.  Note that if no serializer is set, phpredis
will change Array values to 'Array', and Objects to 'Object'.</p>

<h5>
<a name="user-content-parameters-126" class="anchor" href="#parameters-126"><span class="octicon octicon-link"></span></a><em>Parameters</em>
</h5>

<p><em>value</em>:  Mixed.  The value to be serialized</p>

<h5>
<a name="user-content-examples-33" class="anchor" href="#examples-33"><span class="octicon octicon-link"></span></a><em>Examples</em>
</h5>

<pre><code>$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_NONE);
$redis-&gt;_serialize("foo"); // returns "foo"
$redis-&gt;_serialize(Array()); // Returns "Array"
$redis-&gt;_serialize(new stdClass()); // Returns "Object"

$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_PHP);
$redis-&gt;_serialize("foo"); // Returns 's:3:"foo";'

### _unserialize
-----
_**Description**_: A utility method to unserialize data with whatever serializer is set up.

If there is no serializer set, the value will be returned unchanged.  If there is a serializer set up,
and the data passed in is malformed, an exception will be thrown. This can be useful if phpredis is
serializing values, and you return something from redis in a LUA script that is serialized.

##### *Parameters*
*value* string.  The value to be unserialized  

##### *Examples*
</code></pre>

<p>$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_PHP);
$redis-&gt;_unserialize('a:3:{i:0;i:1;i:1;i:2;i:2;i:3;}'); // Will return Array(1,2,3)</p>

<pre><code>


## Introspection  

### IsConnected
-----
_**Description**_:  A method to determine if a phpredis object thinks it's connected to a server

##### *Parameters*
None  

##### *Return value*
*Boolean* Returns TRUE if phpredis thinks it's connected and FALSE if not

### GetHost
-----
_**Description**_:  Retreive our host or unix socket that we're connected to

##### *Parameters*
None  

##### *Return value*
*Mixed* The host or unix socket we're connected to or FALSE if we're not connected


### GetPort
-----
_**Description**_:  Get the port we're connected to

##### *Parameters*
None  

##### *Return value*
*Mixed* Returns the port we're connected to or FALSE if we're not connected

### getDBNum
-----
_**Description**_:  Get the database number phpredis is pointed to

##### *Parameters*
None  

##### *Return value*
*Mixed* Returns the database number (LONG) phpredis thinks it's pointing to or FALSE if we're not connected

### GetTimeout
-----
_**Description**_:  Get the (write) timeout in use for phpredis

##### *Parameters*
None  

##### *Return value*
*Mixed* The timeout (DOUBLE) specified in our connect call or FALSE if we're not connected

### GetReadTimeout
_**Description**_:  Get the read timeout specified to phpredis or FALSE if we're not connected

##### *Parameters*
None  

##### *Return value*
*Mixed*  Returns the read timeout (which can be set using setOption and Redis::OPT_READ_TIMOUT) or FALSE if we're not connected

### GetPersistentID
-----
_**Description**_:  Gets the persistent ID that phpredis is using

##### *Parameters*
None  

##### *Return value*
*Mixed* Returns the persistent id phpredis is using (which will only be set if connected with pconnect), NULL if we're not
using a persistent ID, and FALSE if we're not connected

### GetAuth
-----
_**Description**_:  Get the password used to authenticate the phpredis connection

### *Parameters*
None  

### *Return value*
*Mixed*  Returns the password used to authenticate a phpredis session or NULL if none was used, and FALSE if we're not connected
</code></pre></article>
  </div>


        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com/">API</a></li>
      <li><a href="http://training.github.com/">Training</a></li>
      <li><a href="http://shop.github.com/">Shop</a></li>
      <li><a href="https://github.com/blog">Blog</a></li>
      <li><a href="https://github.com/about">About</a></li>

    </ul>

    <a href="https://github.com/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>Â© 2014 <span title="0.13515s from github-fe122-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
        <li><a href="https://github.com/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w" aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="phpredis-function_files/frameworks-66f40787248d40d8457b357437c30ec844b57b28.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="phpredis-function_files/github-7bec990d39434d21c173f9211d2b80fc4aa53673.js" type="text/javascript"></script>
      
      
        <script async="" src="phpredis-function_files/analytics.js"></script>
  


<div style="position: absolute; left: 0px; top: -9999px; width: 15px; height: 15px; z-index: 999999999;" class="global-zeroclipboard-container" id="global-zeroclipboard-html-bridge">      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" id="global-zeroclipboard-flash-bridge" height="100%" width="100%">         <param name="movie" value="https://assets-cdn.github.com/flash/ZeroClipboard.v1.3.2.swf">         <param name="allowScriptAccess" value="always">         <param name="scale" value="exactfit">         <param name="loop" value="false">         <param name="menu" value="false">         <param name="quality" value="best">         <param name="bgcolor" value="#ffffff">         <param name="wmode" value="transparent">         <param name="flashvars" value="trustedOrigins=github.com%2C%2F%2Fgithub.com%2Chttps%3A%2F%2Fgithub.com%2Cgithub.com%2C%2F%2Fgithub.com%2Chttps%3A%2F%2Fgithub.com">         <embed src="phpredis-function_files/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" name="global-zeroclipboard-flash-bridge" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" wmode="transparent" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="trustedOrigins=github.com%2C%2F%2Fgithub.com%2Chttps%3A%2F%2Fgithub.com%2Cgithub.com%2C%2F%2Fgithub.com%2Chttps%3A%2F%2Fgithub.com" scale="exactfit" height="100%" width="100%">                </object></div></body></html>